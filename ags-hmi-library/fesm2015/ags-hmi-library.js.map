{"version":3,"file":"ags-hmi-library.js.map","sources":["ng://ags-hmi-library/lib/material.module.ts","ng://ags-hmi-library/lib/other/pipes.ts","ng://ags-hmi-library/lib/models/annotation.ts","ng://ags-hmi-library/lib/services/log.service.ts","ng://ags-hmi-library/lib/other/util.ts","ng://ags-hmi-library/lib/services/annotation.service.ts","ng://ags-hmi-library/lib/components/annotation/annotation.component.ts","ng://ags-hmi-library/lib/components/page-not-found/page-not-found.component.ts","ng://ags-hmi-library/lib/components/progress/progress.component.ts","ng://ags-hmi-library/lib/components/title/title.component.ts","ng://ags-hmi-library/lib/models/authentication.ts","ng://ags-hmi-library/lib/services/authentication.service.ts","ng://ags-hmi-library/lib/components/login/login.component.ts","ng://ags-hmi-library/lib/components/empty/empty.component.ts","ng://ags-hmi-library/lib/models/capability.ts","ng://ags-hmi-library/lib/models/vulnerability.ts","ng://ags-hmi-library/lib/models/domain.ts","ng://ags-hmi-library/lib/models/entity.ts","ng://ags-hmi-library/lib/services/cache.service.ts","ng://ags-hmi-library/lib/services/entity.service.ts","ng://ags-hmi-library/lib/components/entity-selector/entity-selector.component.ts","ng://ags-hmi-library/lib/components/chip-display/chip-display.component.ts","ng://ags-hmi-library/lib/components/date-time-picker/date-time-picker.component.ts","ng://ags-hmi-library/lib/services/icon.service.ts","ng://ags-hmi-library/lib/components/state-icon/state-icon.component.ts","ng://ags-hmi-library/lib/ags-hmi-library.module.ts","ng://ags-hmi-library/lib/services/alert.service.ts","ng://ags-hmi-library/lib/services/cal.service.ts","ng://ags-hmi-library/lib/services/draftPlan.service.ts","ng://ags-hmi-library/lib/models/plan.ts","ng://ags-hmi-library/lib/services/plan.service.ts","ng://ags-hmi-library/lib/services/progress.service.ts","ng://ags-hmi-library/lib/services/task-order.service.ts","ng://ags-hmi-library/lib/services/time.service.ts","ng://ags-hmi-library/lib/services/header.service.ts","ng://ags-hmi-library/lib/services/planCollection.service.ts","ng://ags-hmi-library/lib/services/czml.service.ts","ng://ags-hmi-library/lib/services/scheduler.service.ts","ng://ags-hmi-library/lib/services/externalSchedule.service.ts","ng://ags-hmi-library/lib/models/access-window-limit.ts","ng://ags-hmi-library/lib/models/alert.ts","ng://ags-hmi-library/lib/models/alertType.ts","ng://ags-hmi-library/lib/models/missionData.ts","ng://ags-hmi-library/lib/models/missionTarget.ts","ng://ags-hmi-library/lib/models/missionTask.ts","ng://ags-hmi-library/lib/models/optimizationMetric.ts","ng://ags-hmi-library/lib/models/optimizationObjective.ts","ng://ags-hmi-library/lib/models/planAsset.ts","ng://ags-hmi-library/lib/models/planSubType.ts","ng://ags-hmi-library/lib/models/task.ts","ng://ags-hmi-library/lib/models/taskSubType.ts","ng://ags-hmi-library/lib/models/optimization.ts","ng://ags-hmi-library/lib/models/taskConstraint.ts","ng://ags-hmi-library/lib/models/accessWindow.ts","ng://ags-hmi-library/lib/models/timeWindow.ts","ng://ags-hmi-library/lib/models/planCollection.ts","ng://ags-hmi-library/lib/models/planCollectionType.ts","ng://ags-hmi-library/lib/models/displayWindow.ts","ng://ags-hmi-library/lib/models/spsEvent.ts","ng://ags-hmi-library/lib/other/auth.guard.ts","ng://ags-hmi-library/lib/other/enums.ts","ng://ags-hmi-library/lib/other/interceptors.ts","ng://ags-hmi-library/lib/other/mock-backend.interceptor.ts","ng://ags-hmi-library/lib/other/validators.ts"],"sourcesContent":["/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatBottomSheetModule,\r\n  // MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  // MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  // MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  // MatSliderModule,\r\n  // MatSlideToggleModule,\r\n  // MatSnackBarModule,\r\n  // MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  // MatStepperModule,\r\n} from '@angular/material';\r\n// import {MatNativeDateModule, MatRippleModule} from '@angular/material';\r\n// import {CdkTableModule} from '@angular/cdk/table';\r\n// import {CdkAccordionModule} from '@angular/cdk/accordion';\r\n// import {A11yModule} from '@angular/cdk/a11y';\r\n// import {BidiModule} from '@angular/cdk/bidi';\r\n// import {OverlayModule} from '@angular/cdk/overlay';\r\n// import {PlatformModule} from '@angular/cdk/platform';\r\n// import {ObserversModule} from '@angular/cdk/observers';\r\n// import {PortalModule} from '@angular/cdk/portal';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatBottomSheetModule,\r\n    // MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    // MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    // MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    // MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    // MatSlideToggleModule,\r\n    // MatSliderModule,\r\n    // MatSnackBarModule,\r\n    // MatSortModule,\r\n    // MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    // MatNativeDateModule,\r\n    // CdkTableModule,\r\n    // A11yModule,\r\n    // BidiModule,\r\n    // CdkAccordionModule,\r\n    // ObserversModule,\r\n    // OverlayModule,\r\n    // PlatformModule,\r\n    // PortalModule,\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    // MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    // MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    // MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    // MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    // MatSlideToggleModule,\r\n    // MatSliderModule,\r\n    // MatSnackBarModule,\r\n    // MatSortModule,\r\n    // MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    // MatNativeDateModule,\r\n    // CdkTableModule,\r\n    // A11yModule,\r\n    // BidiModule,\r\n    // CdkAccordionModule,\r\n    // ObserversModule,\r\n    // OverlayModule,\r\n    // PlatformModule,\r\n    // PortalModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport moment from 'moment-es6';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n/*\r\nThis pipe will format a date and convert it to UTC unless 'forceUtc' parameter\r\nis set to false. If the date is empty, null, or invalid it will return 'defaultVal'\r\n*/\r\n@Pipe({\r\n  name: 'agsDateFormat'\r\n})\r\nexport class DateFormatPipe implements PipeTransform {\r\n\r\n  static format: string = 'YYYY-MM-DD HH:mm:ss';\r\n\r\n  transform(theDate: moment.Moment | Date | string, defaultVal: string = 'n/a', forceUtc: boolean = true): string {\r\n    if (!moment(theDate).isValid()) {\r\n      return defaultVal;\r\n    }\r\n\r\n    if (forceUtc) {\r\n      return moment.utc(theDate).format(DateFormatPipe.format).toUpperCase();\r\n    } else {\r\n      return moment(theDate).format(DateFormatPipe.format + ' ZZ').toUpperCase();\r\n    }\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: 'trunc'\r\n})\r\nexport class TruncatePipe implements PipeTransform {\r\n  transform(s: string): string {\r\n    if (!s) {\r\n      return '';\r\n    }\r\n    if (s.length < 100) {\r\n      return s;\r\n    }\r\n    return s.slice(0, 99) + '...';\r\n  }\r\n}\r\n\r\n@Pipe({\r\n  name: 'orderBy'\r\n})\r\nexport class OrderByPipe implements PipeTransform {\r\n\r\n  transform(array, asc = true) {\r\n\r\n    if (asc) { // ascending\r\n      return Array.from(array).sort((item1: string, item2: string) => {\r\n        return this.orderByComparator(item1, item2);\r\n      });\r\n    } else { // descending\r\n      return Array.from(array).sort((item1: string, item2: string) => {\r\n        return this.orderByComparator(item2, item1);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  orderByComparator(a: string, b: string): number {\r\n    if (a.toLowerCase() < b.toLowerCase()) {\r\n      return -1;\r\n    } else if (a.toLowerCase() > b.toLowerCase()) {\r\n      return 1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n}\r\n\r\n// NOTE:  Adds class \"search-highlight\" to span containing search term.\r\n@Pipe({\r\n   name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n  constructor(public sanitizer: DomSanitizer) {}\r\n\r\n  transform(text: string, searchTerms): SafeHtml {\r\n    if (searchTerms && text) {\r\n      let s = searchTerms;\r\n\r\n      if (Array.isArray(searchTerms)) {\r\n        if (searchTerms.length === 0) {\r\n          return text;\r\n        }\r\n        s = searchTerms.join(' ');\r\n      }\r\n      \r\n      let pattern = s.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\r\n      pattern = pattern.split(' ').filter((t) => {\r\n          return t.length > 0;\r\n      }).join('|');\r\n      const regex = new RegExp(pattern, 'gi');\r\n\r\n      text = text.replace(/ /g, '&nbsp');\r\n      return this.sanitizer.bypassSecurityTrustHtml(\r\n          text.replace(regex, (match) => `<span class=\"search-highlight\">${match}</span>`)\r\n      );\r\n    } \r\n    else {\r\n      return text;\r\n    }\r\n  }\r\n}\r\n\r\n// Removes an item from a list (array) of items.  Mostly used to remove a string\r\n// from a list, it will also work to remove an object from a list of objects\r\n// as long as there is a 'name' property on the object\r\n@Pipe({\r\n  name: 'remove'\r\n})\r\nexport class RemoveItemPipe implements PipeTransform {\r\n\r\n  // Returns an array of items\r\n  transform(items: any[], itemToRemove: any): any[] {\r\n    if (!Array.isArray(items)) {\r\n      return items;\r\n    }\r\n\r\n    if (Array.isArray(items) && items.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    if (typeof items[0] === 'string') {\r\n      return items.filter(item => \r\n        item.localeCompare(itemToRemove) !== 0\r\n      );\r\n    }\r\n    else if (items[0].hasOwnProperty('name') && itemToRemove.hasOwnProperty('name')) {\r\n      return items.filter(item => \r\n        item.name.localeCompare(itemToRemove.name) !== 0\r\n      );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const CustomPipes = {\r\n  DateFormatPipe,\r\n  TruncatePipe,\r\n  OrderByPipe,\r\n  RemoveItemPipe\r\n};\r\n","import * as _ from 'lodash';\r\nimport { Expose, classToPlain } from 'class-transformer';\r\nexport class Annotation {\r\n    userLogon: string = '';\r\n    lastUpdated: string = '';\r\n    @Expose({name: 'annotationId'})\r\n    id: string = '';\r\n    objectId: string = '';\r\n    annotationType: string = '';\r\n    noteType: string = '';\r\n    narrative: string = '';\r\n    confidence:\tnumber = 0;\r\n\r\n\r\n  constructor(json?: any) {\r\n    if (json) {\r\n      this.userLogon = json.userLogon;\r\n      this.lastUpdated = json.lastUpdated;\r\n      this.id = json.annotationId;\r\n      this.objectId = json.objectId;\r\n      this.annotationType = json.annotationType;\r\n      this.noteType = json.noteType;\r\n      this.narrative = json.narrative;\r\n      this.confidence = json.confidence;\r\n    }\r\n  }\r\n\r\n  serialize() {\r\n    return classToPlain(this);\r\n  }\r\n}\r\n","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport { Injectable, isDevMode } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogService {\r\n\r\n  isLocalhost: boolean = false;\r\n  isDevMode: boolean = false;\r\n\r\n  constructor() {\r\n    this.isLocalhost = window.location.hostname.toLocaleLowerCase() === 'localhost';\r\n    this.isDevMode = isDevMode();\r\n  }\r\n\r\n  // displays in the console. will not display in a production build\r\n  debug(...msg: any[]): void {\r\n    if (!this.isDevMode) {\r\n      return;\r\n    }\r\n    console.log(...msg);\r\n  }\r\n\r\n  // only display if running on localhost\r\n  local(...msg: any[]): void {\r\n    if (!this.isLocalhost) {\r\n      return;\r\n    }\r\n    console.log(...msg);\r\n  }\r\n\r\n  info(...msg: any[]): void {\r\n    console.log(...msg);\r\n  }\r\n\r\n  warn(...msg: any[]): void {\r\n    console.warn(...msg);\r\n  }\r\n\r\n  error(...msg: any[]): void {\r\n    console.error(...msg);\r\n  }\r\n\r\n  highlight(background: string, msg: string): void {\r\n    console.log(`%c ${msg} `, `background: ${background}; color: #000; font-weight: bold;`);\r\n  }\r\n}\r\n","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nexport class Util {\r\n\r\n  /****************************************************************************\r\n   * Generate Guid\r\n   ****************************************************************************/\r\n  static newGuid() {\r\n    let d = new Date().getTime();\r\n    let uuid = 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n      let r = (d + Math.random() * 16) % 16 | 0;\r\n      d = Math.floor(d / 16);\r\n      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16).toUpperCase();\r\n    });\r\n    return uuid;\r\n  }\r\n\r\n  /****************************************************************************\r\n   * Takes a variable list of strings and combines them into a valid url. This\r\n   * function will avoid the problem of missing or extra '/' characters.\r\n   * Example:\r\n   *    input: 'http://www.google.com/', '/string1/', /string2', 'string3'\r\n   *    output: 'http://www.google.com/string1/string2/string3'\r\n   ****************************************************************************/\r\n  static urlJoin(...strArray: string[]) {\r\n    let resultArray = [];\r\n\r\n    // If the first part is a plain protocol, we combine it with the next part.\r\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\r\n      let first = strArray.shift();\r\n      strArray[0] = first + strArray[0];\r\n    }\r\n\r\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\r\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\r\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\r\n    } else {\r\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\r\n    }\r\n\r\n    for (let i = 0; i < strArray.length; i++) {\r\n      let component = strArray[i];\r\n\r\n      if (typeof component !== 'string') {\r\n        throw new TypeError('Url must be a string. Received ' + component);\r\n      }\r\n\r\n      if (component === '') { continue; }\r\n\r\n      if (i > 0) {\r\n        // Removing the starting slashes for each component but the first.\r\n        component = component.replace(/^[\\/]+/, '');\r\n      }\r\n      if (i < strArray.length - 1) {\r\n        // Removing the ending slashes for each component but the last.\r\n        component = component.replace(/[\\/]+$/, '');\r\n      } else {\r\n        // For the last component we will combine multiple slashes to a single one.\r\n        component = component.replace(/[\\/]+$/, '/');\r\n      }\r\n\r\n      resultArray.push(component);\r\n\r\n    }\r\n\r\n    let str = resultArray.join('/');\r\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\r\n\r\n    // remove trailing slash before parameters or hash\r\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\r\n\r\n    // replace ? in parameters with &\r\n    let parts = str.split('?');\r\n    str = parts.shift() + (parts.length > 0 ? '?' : '') + parts.join('&');\r\n\r\n    return str;\r\n  }\r\n\r\n  /****************************************************************************\r\n   * This function can be used to override the console.log function to turn off\r\n   * all messages for production, or intercept the console.log function to do\r\n   * some additional processing.\r\n   ****************************************************************************/\r\n  static overrideConsole() {\r\n    let console = window.console;\r\n    if (!console) { return; }\r\n    function intercept(method) {\r\n      let original = console[method];\r\n      console[method] = function () {\r\n        // do sneaky stuff\r\n        if (original.apply) {\r\n          // Do this for normal browsers\r\n          original.apply(console, arguments);\r\n        } else {\r\n          // Do this for IE\r\n          let message = Array.prototype.slice.apply(arguments).join(' ');\r\n          original(message);\r\n        }\r\n      };\r\n    }\r\n    let methods = ['log', 'warn', 'error'];\r\n    for (let i = 0; i < methods.length; i++) {\r\n      intercept(methods[i]);\r\n    }\r\n  }\r\n\r\n  /****************************************************************************\r\n   * Get the best contrasting color, either black or white, for given input color.\r\n   * Parameters:\r\n   *    color: hex color such as '#FF0077'\r\n   ****************************************************************************/\r\n  contrastColor(hexColor) {\r\n    // Counting the perceptive luminance\r\n    // human eye favors green color...\r\n    let rgb = this.hexToRgb(hexColor);\r\n    let a = 1 - (0.299 * rgb.r + 0.587 * rgb.g + 0.114 * rgb.b) / 255;\r\n    if (a < 0.5) {\r\n      return '#000000';\r\n    } else {\r\n      return '#ffffff';\r\n    }\r\n  }\r\n\r\n  colorFromRgb(r, g, b) {\r\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\r\n  }\r\n\r\n  componentToHex(c) {\r\n    let hex = c.toString(16);\r\n    return hex.length === 1 ? '0' + hex : hex;\r\n  }\r\n\r\n  rgbToHex(r, g, b) {\r\n    return '#' + this.componentToHex(r) + this.componentToHex(g) + this.componentToHex(b);\r\n  }\r\n\r\n  hexToRgb(hex) {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n      return r + r + g + g + b + b;\r\n    });\r\n\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { throwError as observableThrowError, Observable, of, forkJoin } from 'rxjs';\r\nimport { LogService } from './log.service';\r\nimport { Util } from '../other/util';\r\nimport { Annotation } from '../models/annotation';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnnotationService {\r\n\r\n  serviceUrl: string = '';\r\n\r\n  constructor(private http: HttpClient, private logService: LogService) { }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * GET /annotation/{objectId}\r\n   * get a list of Annotations\r\n   **************************************************************************/\r\n  getAnnotations(id: string): Observable<Annotation[]> {\r\n    this.logService.debug('AnnotationService.getAnnotations()');\r\n    const url = Util.urlJoin(this.serviceUrl, `/annotation/${id}`);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived annotation list`, res)),\r\n      map(res => res.map(item => new Annotation(item)))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * POST /annotation\r\n   * create a new event\r\n   **************************************************************************/\r\n  createAnnotation(annotation: Annotation): Observable<any> {\r\n    this.logService.debug('AnnotationService.createAnnotation()');\r\n    const url = Util.urlJoin(this.serviceUrl, '/annotation');\r\n    this.logService.debug(`    POST ${url}`, annotation);\r\n    return this.http.post<any>(url, annotation.serialize(), httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    created annotation`, res)),\r\n      // map(res => new Annotation(res))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * PUT /annotation\r\n   * update event\r\n   **************************************************************************/\r\n  updateAnnotation(annotation: Annotation): Observable<Annotation> {\r\n    this.logService.debug('AnnotationService.updateAnnotation()');\r\n    const url = Util.urlJoin(this.serviceUrl, '/annotation');\r\n    this.logService.debug(`    PUT ${url}`, annotation);\r\n    return this.http.put<Annotation>(url, annotation.serialize(), httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated annotation`, res)),\r\n      map(res => new Annotation(res))\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Annotation } from '../../models/annotation';\r\nimport { AnnotationService } from '../../services/annotation.service';\r\nimport { LogService } from '../../services/log.service';\r\n\r\n@Component({\r\n  selector: 'ags-lib-annotations',\r\n  templateUrl: './annotation.component.html',\r\n  styleUrls: ['./annotation.component.scss']\r\n})\r\nexport class AnnotationComponent implements OnInit, OnChanges {\r\n\r\n  @Input() objectId: string = '';\r\n  @Input() annotationType: string = ''; // EVENTLINK, EVENTMODEL, EVENT, OBSERVABILITY, PLAN, COA, TASK\r\n\r\n  annotationsFormGroup: FormGroup;\r\n  factAnnotations: Array<Annotation>;\r\n  assumptionAnnotations: Array<Annotation>;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private annotationService: AnnotationService,\r\n    private logService: LogService) {\r\n\r\n    // create the controls\r\n    this.annotationsFormGroup = this.formBuilder.group({\r\n      factsCtrl: [null, { updateOn: 'blur' }],\r\n      assumptionsCtrl: [null, { updateOn: 'blur' }]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // call function to update the annotations whenever data changes\r\n    this.annotationsFormGroup.valueChanges.subscribe(x => {\r\n      if (this.annotationsFormGroup.dirty && this.annotationsFormGroup.valid) {\r\n        this.updateAnnotations();\r\n        this.annotationsFormGroup.markAsPristine();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.logService.debug('AnnotationsComponent.ngOnChanges()');\r\n    if (this.objectId) {\r\n      // Get annotations for this event and populate the controls. If no annotations exist, create them\r\n      this.annotationService.getAnnotations(this.objectId).subscribe(annotations => {\r\n        this.factAnnotations = annotations.filter(x => x.noteType.toUpperCase() === 'FACT');\r\n        this.assumptionAnnotations = annotations.filter(x => x.noteType.toUpperCase() === 'ASSUMPTION');\r\n\r\n        // Create new fact and assumption annotations if none exist\r\n        if (!this.factAnnotations || this.factAnnotations.length <= 0) {\r\n          let newAnnotation = new Annotation();\r\n          newAnnotation.objectId = this.objectId;\r\n          newAnnotation.annotationType = this.annotationType;\r\n          newAnnotation.noteType = 'Fact';\r\n          newAnnotation.narrative = '';\r\n          this.factAnnotations.push(newAnnotation);\r\n        }\r\n        this.annotationsFormGroup.controls['factsCtrl'].setValue(this.factAnnotations[0].narrative);\r\n\r\n        if (!this.assumptionAnnotations || this.assumptionAnnotations.length <= 0) {\r\n          let newAnnotation = new Annotation();\r\n          newAnnotation.objectId = this.objectId;\r\n          newAnnotation.annotationType = this.annotationType;\r\n          newAnnotation.noteType = 'Assumption';\r\n          newAnnotation.narrative = '';\r\n          this.assumptionAnnotations.push(newAnnotation);\r\n        }\r\n        this.annotationsFormGroup.controls['assumptionsCtrl'].setValue(this.assumptionAnnotations[0].narrative);\r\n      });\r\n    }\r\n    else {\r\n      throw new Error(`AnnotationComponent: required input parameter 'objectId' is undefined`); \r\n    }\r\n  }\r\n\r\n  updateAnnotations() {\r\n    this.logService.debug('AnnotationsComponent::updateAnnotations()');\r\n    \r\n    let factsCtrl = this.annotationsFormGroup.controls['factsCtrl'];\r\n    let assumptionsCtrl = this.annotationsFormGroup.controls['assumptionsCtrl'];\r\n\r\n    if (factsCtrl.dirty) {\r\n      this.factAnnotations[0].narrative = factsCtrl.value;\r\n\r\n      // if the annotationId is empty that indicates that this is a new annotation\r\n      if (!this.factAnnotations[0].id) {\r\n        this.annotationService.createAnnotation(this.factAnnotations[0]).subscribe(res => {\r\n          this.factAnnotations[0] = res;\r\n        });\r\n      } else {\r\n        this.annotationService.updateAnnotation(this.factAnnotations[0]).subscribe(res => {\r\n          this.factAnnotations[0] = res;\r\n        });\r\n      }\r\n    }\r\n\r\n    if (assumptionsCtrl.dirty) {\r\n      this.assumptionAnnotations[0].narrative = assumptionsCtrl.value;\r\n\r\n      if (!this.assumptionAnnotations[0].id) {\r\n        this.annotationService.createAnnotation(this.assumptionAnnotations[0]).subscribe(res => {\r\n          this.assumptionAnnotations[0] = res;\r\n        });\r\n      } else {\r\n        this.annotationService.updateAnnotation(this.assumptionAnnotations[0]).subscribe(res => {\r\n          this.assumptionAnnotations[0] = res;\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ags-lib-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.scss']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, ViewEncapsulation, AfterViewInit } from '@angular/core';\r\nimport { LogService } from '../../services/log.service';\r\n\r\n@Component({\r\n  selector: 'ags-lib-progress',\r\n  templateUrl: './progress.component.html',\r\n  styleUrls: ['./progress.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\n\r\n  export class ProgressComponent implements AfterViewInit {\r\n\r\n    constructor(\r\n      private logService: LogService\r\n    ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.hideComponent();\r\n  }\r\n\r\n  hideComponent() {\r\n    let el = document.getElementById('progressContainer');\r\n    if (el) {\r\n      el.style.display = 'none';\r\n      this.logService.debug('set style of \"progressContainer\" to \"none\"');\r\n    }\r\n    else {\r\n      this.logService.debug('unable to find element \"progressContainer\"');\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ags-lib-title',\r\n  templateUrl: './title.component.html',\r\n  styleUrls: ['./title.component.scss']\r\n})\r\n\r\nexport class TitleComponent implements OnInit {\r\n  @Input() title: string;\r\n  @Output() onCancel = new EventEmitter<void>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onClick() {\r\n    this.onCancel.emit();\r\n  }\r\n}\r\n","export class AuthenticationRequest {\r\n    userName: string;\r\n    password: string;\r\n\r\n    constructor(json: any) {\r\n        this.userName = json.userName;\r\n        this.password = json.password;\r\n    }\r\n}\r\n\r\nexport class AuthenticationResponse {\r\n    authenticated: boolean;\r\n    displayName: string;\r\n    reason:\tstring;\r\n    token: string;\r\n\r\n    constructor(json: any) {\r\n        this.authenticated = json.authenticated;\r\n        this.displayName = json.displayName;\r\n        this.reason = json.reason;\r\n        this.token = json.token;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { LogService } from './log.service';\r\nimport { Util } from '../other/util';\r\nimport { AuthenticationRequest, AuthenticationResponse } from '../models/authentication';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  private serviceUrl: string = '';\r\n  private loginRoute: string = '';\r\n  private AUTHENICATE = '/authenticate';\r\n  private GET_DOMAINS = '/domain';\r\n  private HTTP_OPTIONS = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'accept': 'application/json',\r\n    })\r\n  };\r\n\r\n  private USERINFO_KEY: string = 'userInfo';\r\n\r\n  private isCurrentlyLoggedIn = false;\r\n  private username: string = '';\r\n\r\n  constructor(private http: HttpClient,\r\n    private router: Router,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  init(serviceUrl: string, loginRoute = '/login') {\r\n    this.serviceUrl = serviceUrl;\r\n    this.loginRoute = loginRoute;\r\n    this.username = this.getUsernameFromStorage();\r\n    this.isCurrentlyLoggedIn = ((this.username != null) && (this.username.length > 0));\r\n  }\r\n\r\n  redirectToLoginPage() {\r\n    this.router.navigateByUrl(this.loginRoute);\r\n  }\r\n\r\n  getAuthenticationServicePrefix() {\r\n    return this.serviceUrl;\r\n  }\r\n\r\n  getUsernameFromStorage(): string {\r\n    let username: string = '';\r\n    let userInfo = this.getUserInfoFromStorage();\r\n\r\n    if (userInfo && userInfo.hasOwnProperty('userName') &&\r\n      (userInfo.userName.length > 0)) {\r\n      username = userInfo.userName;\r\n    }\r\n\r\n    return username;\r\n  }\r\n\r\n  getDisplayNameFromStorage(): string {\r\n    let displayName: string = '';\r\n    let userInfo = this.getUserInfoFromStorage();\r\n\r\n    if (userInfo && userInfo.hasOwnProperty('displayName') &&\r\n      (userInfo.displayName.length > 0)) {\r\n      displayName = userInfo.displayName;\r\n    }\r\n\r\n    return displayName;\r\n  }\r\n\r\n  getTokenFromStorage(): string {\r\n    let token: string = '';\r\n    let userInfo = this.getUserInfoFromStorage();\r\n\r\n    if (userInfo && userInfo.hasOwnProperty('token') &&\r\n      (userInfo.token.length > 0)) {\r\n      token = userInfo.token;\r\n    }\r\n\r\n    return token;\r\n  }\r\n\r\n  getUserInfoFromStorage(): any {\r\n    let userInfo: any;\r\n    userInfo = sessionStorage.getItem(this.USERINFO_KEY);\r\n\r\n    return JSON.parse(userInfo);\r\n  }\r\n\r\n  putUserInfoInStorage(userInfo: any): void {\r\n    sessionStorage.setItem(this.USERINFO_KEY, userInfo);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return this.isCurrentlyLoggedIn;\r\n  }\r\n\r\n  get currentUser() {\r\n    return this.getUsernameFromStorage();\r\n  }\r\n\r\n  get displayName() {\r\n    return this.getDisplayNameFromStorage();\r\n  }\r\n\r\n  get token() {\r\n    return this.getTokenFromStorage();\r\n  }\r\n\r\n\r\n  getAllDomains(): Observable<string[]> {\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_DOMAINS);\r\n    this.logService.debug('AuthenticationService.getAllDomains() - url = ' + url);\r\n\r\n    return this.http.get<any>(url, this.HTTP_OPTIONS).pipe(\r\n      tap(x => this.logService.debug(`retreived domain list`)),\r\n      map(res => res.strings as string[]),\r\n    );\r\n  }\r\n\r\n  logIn(userInfo, domain: string): Observable<AuthenticationResponse> {\r\n    const url = Util.urlJoin(this.serviceUrl, this.AUTHENICATE, domain);\r\n    let authenticationRequest = new AuthenticationRequest(userInfo);\r\n\r\n    return this.http.post<AuthenticationResponse>(url, authenticationRequest, this.HTTP_OPTIONS)\r\n      .pipe(\r\n        tap(\r\n          response => {\r\n            this.logService.debug('got authentication response ' + JSON.stringify(response));\r\n            let authenticationResponse = new Â AuthenticationResponse(response);\r\n            if (authenticationResponse.authenticated) {\r\n              this.putUserInfoInStorage(JSON.stringify({\r\n                userName: userInfo.userName,\r\n                displayName: authenticationResponse.displayName,\r\n                token: authenticationResponse.token,\r\n              }));\r\n              this.isCurrentlyLoggedIn = true;\r\n            }\r\n          },\r\n          error => {\r\n            this.logService.warn('Error authenticating.  [' + error + ']');\r\n          }),\r\n    );\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(this.USERINFO_KEY);\r\n    this.username = '';\r\n    this.isCurrentlyLoggedIn = false;\r\n    sessionStorage.clear();\r\n    this.redirectToLoginPage();\r\n  }\r\n}\r\n","import {AfterContentInit, Component,  OnInit,  Input,  ViewChild,  ElementRef} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { LogService } from '../../services/log.service';\r\nimport { AuthenticationResponse } from '../../models/authentication';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'ags-lib-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, AfterContentInit  {\r\n\r\n  @Input() appName: string = '';\r\n  @ViewChild('username') username: ElementRef;\r\n  \r\n  private returnUrl: string = '';\r\n\r\n  public ERROR_MESSAGES: { [key: string]: string } = {\r\n    loginMessage: 'Unable to Sign In, try again.',\r\n  };\r\n  public domainList: string[] = new Array<string>();\r\n  public selectedDomain = 'cos';\r\n\r\n  public loginForm: FormGroup;\r\n  public loginFailed: boolean = false;\r\n  public submitted: boolean = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private logService: LogService,\r\n    private authenticationService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.appName = this.route.snapshot.data['appName'];\r\n    this.route.queryParams.subscribe(\r\n      params => {\r\n        this.returnUrl = params['return'] || '/';\r\n    });\r\n\r\n    let component = this;\r\n    this.authenticationService.getAllDomains()\r\n    .subscribe((response: any) => {\r\n      for (let i = 0; i < response.length; i++) {\r\n        component.domainList.push(response[i]);\r\n      }\r\n      component.selectedDomain = component.domainList[0];\r\n    });\r\n\r\n    this.createForm();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // Set the focus to the username (mwt)\r\n    this.username.nativeElement.focus();\r\n  }\r\n\r\n  createForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', [\r\n        // Validators.required,\r\n        // Validators.minLength(1),\r\n        // Validators.maxLength(50)\r\n      ]],\r\n      password: ['', [\r\n        // Validators.required,\r\n        // Validators.minLength(3),\r\n        // Validators.maxLength(50)\r\n      ]],\r\n      domain: [{value: this.selectedDomain, disabled: false}, [\r\n        Validators.required,\r\n      ]],\r\n    });\r\n  }\r\n\r\n  logIn() {\r\n    this.submitted = true;\r\n\r\n    let username = this.loginForm.controls.username.value;\r\n    let password = this.loginForm.controls.password.value;\r\n\r\n    this.authenticationService.logIn({\r\n      userName: username,\r\n      password: password}, this.selectedDomain)\r\n      .subscribe(\r\n        res => {\r\n          let authenticationResponse = newÂ AuthenticationResponse(res);\r\n          if (!authenticationResponse.authenticated) {\r\n            this.loginFailed = true;\r\n          } else {\r\n            this.router.navigateByUrl(this.returnUrl);\r\n          }\r\n        },\r\n        err => {\r\n          this.logService.debug('Error occured while authenticating.  ' + JSON.stringify(err));\r\n          this.loginFailed = true;\r\n        }\r\n      );\r\n  }\r\n\r\n  handleOnFocus() {\r\n    if (this.submitted) {\r\n      this.submitted = false;\r\n      this.loginFailed = false;\r\n      this.loginForm.markAsPristine();\r\n      this.loginForm.markAsUntouched();\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ags-lib-empty',\r\n  template: ''\r\n})\r\nexport class EmptyComponent {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { AccessWindowLimit } from './access-window-limit';\r\n\r\nexport class Capability {\r\n    capabilityId: string;\r\n    description: string;\r\n    confidence: string;\r\n    capabilityMapId: string;\r\n    preExecutionTime: number;\r\n    postExecutionTime: number;\r\n    reliabilityProbability: number;\r\n    probabilityOfSuccess: number;\r\n    isDedicated: boolean;\r\n    assessTime: number;\r\n    priority: number;\r\n    executionTime: number;\r\n\r\n    elevationMinLimit: number;\r\n    elevationMaxLimit: number;\r\n    earthLimbAltLimit: number;\r\n    qualityScore: number;\r\n    lunarExclusionAngle: number;\r\n    applyLightingConstraints: boolean;\r\n    solarExclusionAngle: number;\r\n    applySolarDarknessConstraint: boolean;\r\n    rangeMin: number;\r\n    rangeMax: number;\r\n    azimuthMinLimit: number;\r\n    azimuthMaxLimit: number;\r\n\r\n    constructor(json?: any) {\r\n        this.capabilityId = json.capabilityId;\r\n        this.description = json.description;\r\n        this.confidence = json.confidence;\r\n        this.capabilityMapId = json.capabilityMapId;\r\n        this.preExecutionTime = json.preExecutionTime;\r\n        this.postExecutionTime = json.postExecutionTime;\r\n        this.reliabilityProbability = json.reliabilityProbability;\r\n        this.probabilityOfSuccess = json.probabilityOfSuccess;\r\n        this.isDedicated = json.isDedicated;\r\n        this.assessTime = json.assessTime;\r\n        this.priority = json.priority;\r\n        this.executionTime = json.executionTime;\r\n\r\n        this.elevationMinLimit = json.elevationMinLimit;\r\n        this.elevationMaxLimit = json.elevationMaxLimit;\r\n        this.earthLimbAltLimit = json.earthLimbAltLimit;\r\n        this.qualityScore = json.qualityScore;\r\n        this.lunarExclusionAngle = json.lunarExclusionAngle;\r\n        this.applyLightingConstraints = json.applyLightingConstraints;\r\n        this.solarExclusionAngle = json.solarExclusionAngle;\r\n        this.applySolarDarknessConstraint = json.applySolarDarknessConstraint;\r\n        this.rangeMin = json.rangeMin;\r\n        this.rangeMax = json.rangeMax;\r\n        this.azimuthMinLimit = json.azimuthMinLimit;\r\n        this.azimuthMaxLimit = json.azimuthMaxLimit;\r\n    }\r\n}\r\n\r\nexport class CapabilityMap {\r\n    capabilityMapId: string = '';\r\n    capabilityType: string = '';\r\n    uciCapabilityTypeName: string = '';\r\n    uciTaskTypeName: string = '';\r\n    description: string = '';\r\n    hasTarget: boolean = false;\r\n\r\n    constructor(json?: any) {\r\n        this.capabilityMapId = json.capabilityMapId ? json.capabilityMapId : '';\r\n        this.capabilityType = json.capabilityType ? json.capabilityType : '';\r\n        this.uciCapabilityTypeName = json.uciCapabilityTypeName ? json.uciCapabilityTypeName : '';\r\n        this.uciTaskTypeName = json.uciTaskTypeName ? json.uciTaskTypeName : '';\r\n        this.description = json.description ? json.description : '';\r\n        this.hasTarget = json.hasTarget ? json.hasTarget : '' ;\r\n    }\r\n}\r\n\r\nexport class Observability {\r\n    observingCapabilityMapId: string;\r\n    observingCapabilityType: string;\r\n    usedCapabilityMapId: string;\r\n    usedCapabilityType: string;\r\n    description: string;\r\n    capabilityDomain: string;\r\n\r\n    constructor(json?: any) {\r\n        if (json != null) {\r\n            this.observingCapabilityMapId = json.observingCapabilityMapId;\r\n            this.observingCapabilityType = json.observingCapabilityType;\r\n            this.usedCapabilityMapId = json.usedCapabilityMapId;\r\n            this.usedCapabilityType = json.usedCapabilityType;\r\n            this.description = json.description;\r\n            this.capabilityDomain = json.capabilityDomain;\r\n        }\r\n    }\r\n}\r\n","export class Vulnerability {\r\n\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    confidence: number;\r\n\r\n    constructor(json?: any) {\r\n        if (json) {\r\n            this.fromJson(json);\r\n        }\r\n    }\r\n\r\n    fromJson(json: any) {\r\n        this.id = json.vulnerabilityId;\r\n        this.name = json.vulnerabilityName;\r\n        this.description =  json.description;\r\n        this.confidence = json.confidence;\r\n    }\r\n}\r\n","export class Domain {\r\n    domainType: string = '';\r\n    agsEntityId: string = '';\r\n    sccNum: string = '';\r\n    orbitType: string = '';\r\n    constellation: string = '';\r\n    intlDesignator: string = '';\r\n    launchSite: string = '';\r\n    launchDate: string = '';\r\n    decayDate: string = '';\r\n    tles: any[];\r\n    waypoints: any[];\r\n\r\n    constructor(json?: any) {\r\n        if (json) {\r\n            this.domainType = json.domainType;\r\n            this.agsEntityId = json.agsEntityId;\r\n            this.sccNum = json.sccNum;\r\n            this.orbitType = json.orbitType;\r\n            this.constellation = json.constellation;\r\n            this.intlDesignator = json.intlDesignator;\r\n            this.launchSite = json.launchSite;\r\n            this.launchDate = json.launchDate;\r\n            this.decayDate = json.decayDate;\r\n            this.tles = json.tles;\r\n            this.waypoints = json.waypoints;\r\n        }\r\n        else {\r\n            this.domainType = 'SPACE';\r\n        }\r\n    }\r\n}\r\n","import { Capability } from './capability';\r\nimport { Vulnerability } from './vulnerability';\r\nimport { Domain } from './domain';\r\n\r\n/* tslint:disable:no-use-before-declare */\r\nexport class Country {\r\n    code: string;\r\n    name: string;\r\n\r\n    constructor(json?: string[]) {\r\n        if (json) {\r\n            this.fromJson(json);\r\n        }\r\n    }\r\n\r\n    fromJson(json: string[]) {\r\n        this.code = json[0];\r\n        this.name = json[1];\r\n    }\r\n\r\n    toString(): string {\r\n        return JSON.stringify(this);\r\n    }\r\n}\r\n\r\nexport class Entity {\r\n    entityType: string = '';\r\n    name: string = '';\r\n    description: string = '';\r\n    owner: string = '';\r\n    sic: string = '';\r\n    countryCodeAlpha5: string = '';\r\n    affiliation: string = '';\r\n    rgb: string = '';\r\n    colorName: string = '';\r\n    parentId: string = '';\r\n\r\n    childrenIds: string[] = [];\r\n    groupIds: string[] = [];\r\n    capabilities: Capability[] = [];\r\n    vulnerabilities: Vulnerability[];\r\n\r\n    domain:\tDomain;\r\n    agsEntityId: string;\r\n\r\n    constructor(json: any) {\r\n        this.entityType = json.entityType;\r\n        this.name = json.name;\r\n        this.description = json.description;\r\n        this.owner = json.owner;\r\n        this.sic = json.sic;\r\n        this.countryCodeAlpha5 = json.countryCodeAlpha5;\r\n        this.affiliation = json.affiliation;\r\n        this.rgb = json.rgb;\r\n        this.colorName = json.colorName;\r\n        this.parentId = json.parentId;\r\n\r\n        this.childrenIds = json.childrenIds ? json.childrenIds : [];\r\n        this.groupIds = json.groupIds ? json.groupIds : [];\r\n        this.capabilities = json.capabilities ? json.capabilities.map(x => new Capability(x)) : [];\r\n        this.vulnerabilities = json.vulnerabilities ? json.vulnerabilities.map(x => new Vulnerability(x)) : [];\r\n\r\n        this.domain = json.domain ? new Domain(json.domain) : new Domain();\r\n        this.agsEntityId = json.agsEntityId;\r\n    }\r\n}\r\n\r\nexport class PartialEntity {\r\n    entityId: string = '';\r\n    name: string = '';\r\n    countryName: string = '';\r\n    domainType: string = '';\r\n    owner: string = '';\r\n    scc: string = '';\r\n    affiliation: string = '';\r\n    groups: Group[];\r\n    capabilityTypes: string[];\r\n\r\n    constructor(json: any) {\r\n        this.entityId = json.agsEntityId ? json.agsEntityId : '';\r\n        this.name = json.name ? json.name : '';\r\n        this.countryName = json.country ? json.country : '';\r\n        this.domainType = json.domainType ? json.domainType : '';\r\n        this.owner = json.owner ? json.owner : '';\r\n        this.scc = json.sccNum ? json.sccNum.toString() : '';\r\n        this.affiliation = json.affiliation ? json.affiliation : '';\r\n        this.groups = json.groups ? json.groups.map(x => new Group(x)) : [];\r\n        this.capabilityTypes = json.capabilityTypes ? json.capabilityTypes : [];\r\n    }\r\n}\r\n\r\nexport class Group {\r\n    groupName: string = '';\r\n    entityCount: number;\r\n    groupId: string = '';\r\n\r\n    //NEW MODEL DEFINITION\r\n    name: string;\r\n    id: string;\r\n\r\n    constructor(json?: any) {\r\n        this.groupName = json.groupName ? json.groupName : json.name;\r\n        this.entityCount = json.entityCount;\r\n        this.groupId = json.groupId ? json.groupId : json.id;\r\n        this.name = json.name ? json.name : json.groupName;\r\n        this.id = json.id ? json.id : json.groupId;\r\n    }\r\n}\r\n\r\n// BaseEntity class is only intended to be used as a helper class for service calls.\r\nexport class BaseEntity {\r\n    agsEntityId: string;\r\n    entityType: string;\r\n    name: string;\r\n    description: string;\r\n    owner: string;\r\n    sic: string;\r\n    domainType: string;\r\n    parentId: string;\r\n\r\n    constructor(entity: Entity) {\r\n        this.agsEntityId = entity.agsEntityId;\r\n        this.entityType = entity.entityType ? entity.entityType : '';\r\n        this.name = entity.name;\r\n        this.description = entity.description ? entity.description : '';\r\n        this.owner = entity.owner ? entity.owner : '';\r\n        this.sic = entity.sic ? entity.sic : '';\r\n        this.domainType = entity.domain.domainType ? entity.domain.domainType : '';\r\n    }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport {throwError as observableThrowError,  Observable ,  Subject ,  of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\ninterface CacheContent {\r\n  expiry: number;\r\n  value: any;\r\n}\r\n\r\n/**\r\n * Cache Service is an observables based in-memory cache implementation\r\n * Keeps track of in-flight observables and sets a default expiry for cached values\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CacheService {\r\n  private cache: Map<string, CacheContent> = new Map<string, CacheContent>();\r\n  readonly DEFAULT_MAX_AGE: number = 300000;\r\n\r\n  /**\r\n   * Gets the value from cache if the key is provided.\r\n   */\r\n  get(key: string, fallback?: Observable<any>, maxAge?: number): Observable<any> | Subject<any> {\r\n\r\n    if (this.hasValidCachedValue(key)) {\r\n      console.log(`%cGetting from cache ${key}`, 'color: green');\r\n      return of(this.cache.get(key).value);\r\n    }\r\n\r\n    if (!maxAge) {\r\n      maxAge = this.DEFAULT_MAX_AGE;\r\n    }\r\n\r\n    if (fallback && fallback instanceof Observable) {\r\n      console.log(`%c Calling api for ${key}`, 'color: purple');\r\n      return fallback.pipe(tap((value) => { this.set(key, value, maxAge);  /*console.log(`%c added ${key}/${JSON.stringify(value).substr(0, 50)} to cache`, 'color: purple');*/ }));\r\n    } else {\r\n      return observableThrowError('Requested key is not available in Cache');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the value with key in the cache\r\n   * Notifies all observers of the new value\r\n   */\r\n  set(key: string, value: any, maxAge: number = this.DEFAULT_MAX_AGE): void {\r\n    this.cache.set(key, { value: value, expiry: Date.now() + maxAge });\r\n  }\r\n\r\n  /**\r\n   * Checks if the a key exists in cache\r\n   */\r\n  has(key: string): boolean {\r\n    return this.cache.has(key);\r\n  }\r\n\r\n   /**\r\n   * Delete cache entry\r\n   */\r\n  delete(key: string): void {\r\n    this.cache.delete(key);\r\n  }\r\n\r\n  /**\r\n   * Checks if the key exists and has not expired.\r\n   */\r\n  private hasValidCachedValue(key: string): boolean {\r\n    if (this.cache.has(key)) {\r\n      if (this.cache.get(key).expiry < Date.now()) {\r\n        this.cache.delete(key);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { throwError as observableThrowError, Observable, of, forkJoin, empty } from 'rxjs';\r\n\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\nimport { CacheService } from './cache.service';\r\nimport { Entity, PartialEntity, BaseEntity, Group, Country } from '../models/entity';\r\nimport { CapabilityMap, Observability } from '../models/capability';\r\nimport { Vulnerability } from '../models/vulnerability';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EntityService {\r\n\r\n  serviceUrl: string = '';\r\n\r\n  GET_ENTITY = '/entity/';\r\n  GET_ENTITIES_BY_SUBSTRING = '/entity/getEntitiesBySubstring/';\r\n  GET_ALL_CAPABILITY_TYPES = '/entity/getAllCapabilityTypes';\r\n  GET_ALL_CAPABILITY_MAPS = '/entity/getAllCapabilityMaps';\r\n  GET_ALL_VULNERABILITIES = '/entity/getAllVulnerabilities';\r\n  GET_ALL_AFFILIATIONS = '/entity/getAllAffiliations';\r\n  GET_ALL_COUNTRIES = '/entity/getAllCountries';\r\n  CREATE_GROUP = '/entity/createGroupByGroupName';\r\n  GET_ALL_ENTITY_GROUPS = '/entity/getAllEntityGroups';\r\n  GET_ENTITIES_BY_GROUP = '/entity/getEntitiesByGroup/';\r\n\r\n  GET_PARTIAL_ENTITIES_BY_GROUP = '/entity/getPartialEntitiesByGroup/';\r\n  PARTIAL_ENTITIES_BY_SUBSTRINGS = '/entity/partial';\r\n\r\n  UPDATE_ENTITY = '/entity/';\r\n  ADD_OR_UPDATE_CAPABILITY_MAP = '/entity/addOrUpdateCapabilityMap';\r\n  ADD_OR_UPDATE_OBSERVABILITY = '/entity/addOrUpdateObservability';\r\n\r\n  DELETE_ENTITIES = '/entity/deleteEntitiesByIds';\r\n  DELETE_CAPABILITY_MAPS = '/entity/deleteCapabilityMapsByIds';\r\n  DELETE_OBSERVABILITY = '/entity/deleteObservability/';\r\n  DELETE_GROUPS = '/entity/deleteGroupsByIds';\r\n\r\n  DEFAULT_SEARCH_TYPES = ['name', 'group'];\r\n\r\n  constructor(private http: HttpClient, private logService: LogService,\r\n    private cacheService: CacheService) { }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  // getPartialEntitiesBySubstring(substring: ByteString): Observable<PartialEntity[]> {\r\n  //   this.logService.debug('EntityService.getPartialEntitiesBySubstring()');\r\n  //   const url = Util.urlJoin(this.serviceUrl, this.GET_ENTITIES_BY_SUBSTRING, substring);\r\n\r\n  //   return this.cacheService.get(url, this.http.get<PartialEntity[]>(url, httpOptions)).pipe(\r\n  //     tap(res => this.logService.debug(`    retreived entity list by substring`, res)),\r\n  //     map(res => res.map(item => new PartialEntity(item)))\r\n  //   );\r\n  // }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getAllCapabilityTypes(useCache: boolean = true): Observable<string[]> {\r\n    this.logService.debug('EntityService.getAllCapabilityTypes()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_ALL_CAPABILITY_TYPES);\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    return this.cacheService.get(url, this.http.get<any>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived capability type list`, res)),\r\n      map((res) => { // sort the list\r\n        return (res['strings'] as string[]).sort((n1, n2) => {\r\n          return n1.toLowerCase().localeCompare(n2.toLowerCase());\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * GET /entity/getAllCapabilityMaps\r\n   * get a list of CapabilityMap\r\n   **************************************************************************/\r\n  getAllCapabilityMaps(useCache: boolean = true): Observable<CapabilityMap[]> {\r\n    this.logService.debug('EntityService.getAllCapabilityMaps()');\r\n    const url = Util.urlJoin(this.serviceUrl, '/entity/getAllCapabilityMaps');\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    // compare function\r\n    let compareCapabilityMap = (n1: CapabilityMap, n2: CapabilityMap) => {\r\n      return n1.capabilityType.toLowerCase().localeCompare(n2.capabilityType.toLowerCase());\r\n    };\r\n\r\n    return this.cacheService.get(url, this.http.get<CapabilityMap[]>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived capability map list`, res)),\r\n      map(res => res.map(item => new CapabilityMap(item)).sort(compareCapabilityMap))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * GET /entity/getObservabilitiesByUsedCapabilityMapId\r\n   * get a list of Observability\r\n   **************************************************************************/\r\n  getObservabilitiesByUsedCapabilityMapId(capabilityMapId: string): Observable<Observability[]> {\r\n    this.logService.debug('EntityService.getObservabilitiesByUsedCapabilityMapId()');\r\n    const url = Util.urlJoin(this.serviceUrl, '/entity/getObservabilitiesByUsedCapabilityMapId/', capabilityMapId);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived capability map list`, res)),\r\n      map(res => res.map(item => new Observability(item)))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getAllVulnerabilities(useCache: boolean = true): Observable<Vulnerability[]> {\r\n    this.logService.debug('EntityService.getAllVulnerabilities()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_ALL_VULNERABILITIES);\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    // compare function\r\n    let compareVulnerability = (n1: Vulnerability, n2: Vulnerability) => {\r\n      return n1.name.toLowerCase().localeCompare(n2.name.toLowerCase());\r\n    };\r\n\r\n    return this.cacheService.get(url, this.http.get<Vulnerability[]>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived all vulnerabilities`, res)),\r\n      map(res => res.map(item => new Vulnerability(item)).sort(compareVulnerability))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getCapabilitiesByObservableType(observableType: string, useCache: boolean = true): Observable<CapabilityMap[]> {\r\n    this.logService.debug('EntityService.getCapabilitiesByObservableType()');\r\n    const url = Util.urlJoin(this.serviceUrl, '/entity/getCapabilitiesByObserverType/', observableType);\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    return this.cacheService.get(url, this.http.get<CapabilityMap[]>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived capabilities list`, res)),\r\n      map(res => res.map(item => new CapabilityMap(item)))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getAllAffiliations(useCache: boolean = true): Observable<string[]> {\r\n    this.logService.debug('EntityService.getAllAffiliations()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_ALL_AFFILIATIONS);\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    return this.cacheService.get(url, this.http.get<any>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived affiliation list`, res)),\r\n      map(res => {\r\n        return res.map(item => {\r\n          return item.affiliation;\r\n        });\r\n      })\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getAllCountries(useCache: boolean = true): Observable<Country[]> {\r\n    this.logService.debug('EntityService.getAllCountries()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_ALL_COUNTRIES);\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    // compare function\r\n    let compareCountry = (n1: Country, n2: Country) => {\r\n      return n1.name.toLowerCase().localeCompare(n2.name.toLowerCase());\r\n    };\r\n\r\n    return this.cacheService.get(url, this.http.get<Country[]>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived country list`, res)),\r\n      map(res => res.keyValuePairs.map(item => new Country(item)).sort(compareCountry))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  createGroup(group: Group, entityIds: string[]): Observable<any> {\r\n    const url = Util.urlJoin(this.serviceUrl, this.CREATE_GROUP, encodeURIComponent(group.groupName));\r\n    let component = this;\r\n\r\n    let data = {\r\n      strings: entityIds,\r\n    };\r\n\r\n    return this.http.post(url, data, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    created group`, res))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getAllEntityGroups(useCache: boolean = true): Observable<Group[]> {\r\n    this.logService.debug('EntityService.getAllEntityGroups()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_ALL_ENTITY_GROUPS);\r\n\r\n    if (!useCache) {\r\n      this.cacheService.delete(url);\r\n    }\r\n\r\n    // compare function\r\n    let compareGroup = (n1: Group, n2: Group) => {\r\n      return n1.groupName.toLowerCase().localeCompare(n2.groupName.toLowerCase());\r\n    };\r\n\r\n    return this.cacheService.get(url, this.http.get<Group[]>(url, httpOptions)).pipe(\r\n      tap(res => this.logService.debug(`    retreived all groups`, res)),\r\n      map(res => res.keyValuePairs.map(item => new Group(item)).sort(compareGroup))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getEntity(id: string): Observable<Entity> {\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_ENTITY, id);\r\n    this.logService.debug(url);\r\n\r\n    return this.http.get<Entity>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived entity`, res)),\r\n      map(x => new Entity(x))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getEntityById(id: string): Observable<Entity> {\r\n    this.logService.debug('EntityService.getEntityById()');\r\n    const url = Util.urlJoin(this.serviceUrl, '/entity/getEntityById', id);\r\n\r\n    return this.http.get<Entity>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived entity`, res)),\r\n      map(x => new Entity(x))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  addEntity(entity: Entity): Observable<any> {\r\n    this.logService.debug('EntityService.addEntity()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.UPDATE_ENTITY);\r\n\r\n    let component = this;\r\n    return this.http.post(url, entity, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated entity ${entity.name}`, res))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  updateEntity(entity: Entity): Observable<any> {\r\n    this.logService.debug('EntityService.updateEntity()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.UPDATE_ENTITY, entity.agsEntityId);\r\n\r\n    let component = this;\r\n    return this.http.put(url, entity, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated entity ${entity.name}`, res))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  addCapabilityMap(capabilityMap: CapabilityMap): Observable<any> {\r\n    this.logService.debug('EntityService.addCapabilityMap');\r\n    return this.updateCapabilityMap(capabilityMap);\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  updateCapabilityMap(capabilityMap: CapabilityMap): Observable<any> {\r\n    this.logService.debug('EntityService.updateCapabilityMap()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.ADD_OR_UPDATE_CAPABILITY_MAP);\r\n\r\n    let component = this;\r\n    return this.http.post(url, capabilityMap, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated capability map ${capabilityMap.capabilityType}`, res))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  getPartialEntitiesByGroup(group: string): Observable<PartialEntity[]> {\r\n    this.logService.debug('EntityService.getPartialEntitiesByGroup()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.GET_PARTIAL_ENTITIES_BY_GROUP, encodeURIComponent(group));\r\n\r\n    // compare function\r\n    let comparePartialEntity = (n1: PartialEntity, n2: PartialEntity) => {\r\n      return n1.name.toLowerCase().localeCompare(n2.name.toLowerCase());\r\n    };\r\n\r\n    return this.http.get<PartialEntity[]>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived partial entity list by group`, res)),\r\n      map(res => res.map(item => new PartialEntity(item)).sort(comparePartialEntity))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  partialEntitiesBySubstrings(strings: string[], searchTypes: string[] = this.DEFAULT_SEARCH_TYPES): Observable<PartialEntity[]> {\r\n    this.logService.debug('EntityService.partialEntitiesBySubstrings()');\r\n    const url = Util.urlJoin(this.serviceUrl, this.PARTIAL_ENTITIES_BY_SUBSTRINGS);\r\n\r\n    let searchParms = {\r\n      searchTypes: searchTypes,\r\n      strings: strings,\r\n    };\r\n\r\n    // compare function\r\n    let comparePartialEntity = (n1: PartialEntity, n2: PartialEntity) => {\r\n      return n1.name.toLowerCase().localeCompare(n2.name.toLowerCase());\r\n    };\r\n\r\n    return this.http.post<any>(url, searchParms, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived partial entity list by substrings`, res)),\r\n      map(res => res.map(item => new PartialEntity(item)).sort(comparePartialEntity))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  deleteEntities(entityIds: string[]) {\r\n    this.logService.debug('EntityService.deleteEntities');\r\n    const url = Util.urlJoin(this.serviceUrl, this.DELETE_ENTITIES);\r\n\r\n    // NOTE:  In order to specify the return type of 'text', the generic\r\n    //        signature had to be removed.\r\n    const deleteOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      responseType: 'text' as 'text',\r\n      body: {\r\n        strings: entityIds\r\n      },\r\n    };\r\n\r\n    let component = this;\r\n    // return this.http.delete<any>(url, deleteOptions).pipe(\r\n    return this.http.delete(url, deleteOptions).pipe(\r\n      tap(res => this.logService.debug(`    deleted entities successfully`))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  deleteCapabilities(capabilityIds: string[]) {\r\n    this.logService.debug('EntityService.deleteCapabilities');\r\n    const url = Util.urlJoin(this.serviceUrl, this.DELETE_CAPABILITY_MAPS);\r\n\r\n    const deleteOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      responseType: 'text' as 'text',\r\n      body: {\r\n        strings: capabilityIds\r\n      },\r\n    };\r\n\r\n    let component = this;\r\n    return this.http.delete(url, deleteOptions).pipe(\r\n      tap(res => this.logService.debug(`    deleted capabilities successfully`))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  addObservabilities(observabilities: Observability[]): Observable<any> {\r\n    if (!observabilities || observabilities.length === 0) {\r\n      return of('addObservabilities received empty list.  Consider successful.');\r\n    }\r\n\r\n    let addRequests: Observable<string>[] = [];\r\n    observabilities.forEach(o => {\r\n      addRequests.push(this.addObservability(o));\r\n    });\r\n\r\n    return forkJoin(...addRequests);\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  addObservability(observability: Observability): Observable<string> {\r\n    this.logService.debug('EntityService.addObservability');\r\n    const url = Util.urlJoin(this.serviceUrl, this.ADD_OR_UPDATE_OBSERVABILITY);\r\n\r\n    let component = this;\r\n    return this.http.post<string>(url, observability, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    added observability successfully`, res))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  deleteObservabilities(observabilities: Observability[]): Observable<any> {\r\n    if (!observabilities || observabilities.length === 0) {\r\n      return of('deleteObservabilities received empty list.  Consider successful.');\r\n    }\r\n\r\n    let deleteRequests: Observable<string>[] = [];\r\n    observabilities.forEach(o => {\r\n      deleteRequests.push(this.deleteObservability(o));\r\n    });\r\n\r\n    return forkJoin(...deleteRequests);\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  deleteObservability(observability: Observability): Observable<string> {\r\n    this.logService.debug('EntityService.deleteObservability');\r\n    const url = Util.urlJoin(this.serviceUrl, this.DELETE_OBSERVABILITY, observability.observingCapabilityMapId, observability.usedCapabilityMapId);\r\n\r\n    // NOTE:  In order to specify the return type of 'text', the generic\r\n    //        signature had to be removed.\r\n    const deleteOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      responseType: 'text' as 'text',\r\n    };\r\n\r\n    let component = this;\r\n    return this.http.delete(url, deleteOptions).pipe(\r\n      tap(res => this.logService.debug(`    deleted observability successfully`))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   *\r\n   *\r\n   **************************************************************************/\r\n  deleteGroups(groupIds: string[]): Observable<string> {\r\n    this.logService.debug('EntityService.deleteGroups');\r\n    const url = Util.urlJoin(this.serviceUrl, this.DELETE_GROUPS);\r\n\r\n    // NOTE:  In order to specify the return type of 'text', the generic\r\n    //        signature had to be removed.\r\n    const deleteOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      responseType: 'text' as 'text',\r\n      body: {\r\n        strings: groupIds\r\n      },\r\n\r\n    };\r\n\r\n    let component = this;\r\n    return this.http.delete(url, deleteOptions).pipe(\r\n      tap(res => this.logService.debug(`    deleted groups successfully`))\r\n    );\r\n  }\r\n\r\n  // Rethrow error so client can react.\r\n  private rethrowError(err: any) {\r\n    // NOTE:  Not an error.\r\n    if (err.status === 200 || err.status === 204) {\r\n      return of(err);\r\n    }\r\n\r\n    if (err instanceof Response) {\r\n      return observableThrowError(err);\r\n    }\r\n    return observableThrowError(err);\r\n  }\r\n\r\n  loadEntities(group: string): Observable<BaseEntity[]> {\r\n    this.logService.debug('EntityService.loadEntities');\r\n    const url = Util.urlJoin(this.serviceUrl, '/entity/getPartialEntitiesByGroup/' + encodeURIComponent(group));\r\n\r\n    return this.http.get<BaseEntity[]>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n}\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Optional, Output, Self, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, NgControl, ControlValueAccessor } from '@angular/forms';\r\nimport { empty } from 'rxjs';\r\nimport { debounceTime, switchMap } from 'rxjs/operators';\r\nimport { PartialEntity, Group } from '../../models/entity';\r\nimport { EntityService } from '../../services/entity.service';\r\nimport { LogService } from '../../services/log.service';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\n\r\nconst INVALID_ENTITY: PartialEntity = new PartialEntity({\r\n  name: '',\r\n  agsEntityId: '',\r\n});\r\n\r\n\r\n@Component({\r\n  selector: 'ags-lib-entity-selector',\r\n  templateUrl: './entity-selector.component.html',\r\n  styleUrls: ['./entity-selector.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class EntitySelectorComponent implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n  @Input() label: string = '';\r\n  @Input() name: string = '';\r\n  @Input() id: string = '';\r\n  // @Output() entitySelected = new EventEmitter<PartialEntity>();\r\n\r\n  onChange: Function;\r\n  onTouched: Function;\r\n\r\n  entitySelectionFormGroup: FormGroup;\r\n  inputCtrl: FormControl;\r\n  optionsCtrl: FormControl;\r\n  entities: PartialEntity[] = [];\r\n  hasFocus: boolean = false;\r\n  incomingEntity: PartialEntity = INVALID_ENTITY;\r\n  selectedEntity: PartialEntity = INVALID_ENTITY;\r\n  isSearching = false;\r\n\r\n  // ControlValueAccessor methods\r\n  writeValue(value) { this.selectedEntity.entityId = value; }\r\n  registerOnChange(fn) { this.onChange = fn; }\r\n  registerOnTouched(fn) { this.onTouched = fn; }\r\n\r\n  constructor(\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    private entityService: EntityService,\r\n    private logService: LogService) {\r\n      this.createForm();\r\n\r\n      if (this.ngControl != null) { this.ngControl.valueAccessor = this; }\r\n  }\r\n\r\n  createForm() {\r\n    this.inputCtrl = new FormControl(\r\n      { value: '', disabled: false }, \r\n      { /* validators: Validators.required */}\r\n    );\r\n    this.optionsCtrl = new FormControl();\r\n\r\n    this.entitySelectionFormGroup = new FormGroup({\r\n      inputCtrl: this.inputCtrl,\r\n      optionsCtrl: this.optionsCtrl,\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const component = this;\r\n    this.inputCtrl.valueChanges.pipe(\r\n      debounceTime(500),\r\n      switchMap((term) => {\r\n        let termType = typeof term;\r\n        if (!term || (termType.localeCompare('string') !== 0) || (term.length < 2)) {\r\n          component.entities = [];\r\n          component.isSearching = false;\r\n          return empty();\r\n        }\r\n        else {\r\n          component.isSearching = true;\r\n          component.entities = [];\r\n          return component.entityService.partialEntitiesBySubstrings(term.split(' '));\r\n        }\r\n    }))\r\n    .subscribe((result) => {\r\n      component.isSearching = false;\r\n      component.entities = result;\r\n    });\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.id) {\r\n      this.incomingEntity = new PartialEntity({\r\n        name: this.name,\r\n        agsEntityId: this.id,\r\n      });\r\n    }\r\n    else {\r\n      this.incomingEntity = INVALID_ENTITY;\r\n    }\r\n\r\n    // Start with incoming equal to selected\r\n    this.selectedEntity = this.incomingEntity;\r\n\r\n    if (this.entitySelectionFormGroup) {\r\n      this.entitySelectionFormGroup.reset({\r\n        inputCtrl: this.incomingEntity,\r\n      });\r\n    }\r\n  }\r\n\r\n  displayEntityAs(entity?: PartialEntity): string | undefined {\r\n    if (entity && entity.name) {\r\n      return entity.name.trim();\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  // Ensure no list pops up when entering control.\r\n  onFocus(event) {\r\n    this.entities = [];\r\n    this.hasFocus = true;\r\n  }\r\n\r\n  onBlur(event) {\r\n    this.entitySelectionFormGroup.reset({\r\n      inputCtrl: this.selectedEntity,\r\n    });\r\n\r\n    this.hasFocus = false;\r\n  }\r\n\r\n  onSelected(event) {\r\n    this.selectedEntity = event.source.value;\r\n    this.name = this.selectedEntity.name;\r\n    this.id = this.selectedEntity.entityId;\r\n\r\n    this.onChange(this.selectedEntity.entityId);\r\n  }\r\n\r\n  onMouseDown() {\r\n    this.selectedEntity = INVALID_ENTITY;\r\n    this.name = '';\r\n    this.id = '';\r\n\r\n    this.onChange('');\r\n\r\n    if (this.selectedEntity !== this.incomingEntity) {\r\n      this.incomingEntity = INVALID_ENTITY;\r\n    }\r\n    this.entities = [];\r\n    this.entitySelectionFormGroup.get('inputCtrl').setValue('', {emitEvent: false});\r\n  }\r\n\r\n  getTitle(entity: PartialEntity) {\r\n    let title: string = '';\r\n\r\n    title += 'SCC:  ' + (entity.scc ? entity.scc.trim() : '');\r\n    title += '\\nCountry:  ' + (entity.countryName ? entity.countryName.trim() : '');\r\n    title += '\\nAffiliation:  ' + (entity.affiliation ? entity.affiliation.trim() : '');\r\n\r\n    return title;\r\n  }\r\n\r\n  formatResults(entity: PartialEntity, searchTerm: string) {\r\n    let result: string = '';\r\n    let terms = searchTerm.split(' ');\r\n    result += entity.name.trim();\r\n\r\n    // Add SCC if present\r\n    if (entity.scc) {\r\n      result += ', ' + entity.scc;\r\n    }\r\n\r\n    function areAllTermsFound(termsToSearchFor, stringToSearch) {\r\n      let found = true;\r\n      for (let i = 0; i < termsToSearchFor.length; i++) {\r\n        if (stringToSearch.toUpperCase().indexOf(termsToSearchFor[i].toUpperCase()) < 0) {\r\n          found = false;\r\n          break;\r\n        }\r\n      }\r\n\r\n      return found;\r\n    }\r\n\r\n    // Add matching group name(s)\r\n    let groupText: string = '';\r\n    let firstGroup: boolean = true;\r\n    entity.groups.forEach(group => {\r\n\r\n      if (areAllTermsFound(terms, group.groupName)) {\r\n        if (!firstGroup) {\r\n          groupText += ', ';\r\n        }\r\n        groupText += group.groupName;\r\n        firstGroup = false;\r\n      }\r\n    });\r\n\r\n    if (groupText) {\r\n      result += ' (' + groupText + ')';\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","/* \r\n *  Displays a list of items as Angular Material chips.\r\n *  - a button is pressed to display list of selectable items\r\n *  - \"onChange\" is fired upon selection from list (either by mouse or <enter>)\r\n *  - each chip has an embedded icon which removes chip from list\r\n */\r\nimport { Component, OnInit, ViewEncapsulation, Input, Optional, Self, OnChanges } from '@angular/core';\r\nimport { KeyValue } from '@angular/common';\r\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\r\nimport { LogService } from '../../services/log.service';\r\n\r\n@Component({\r\n  selector: 'ags-lib-chip-display',\r\n  templateUrl: './chip-display.component.html',\r\n  styleUrls: ['./chip-display.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ChipDisplayComponent implements OnInit, OnChanges, ControlValueAccessor {\r\n\r\n  // Label to be displayed as placeholder\r\n  @Input() label: string = '';\r\n  // List of items from which to choose.\r\n  // key = displayed value (e.g. group name)\r\n  // value = as a rule, the internal GUID (e.g. group ID)\r\n  @Input() selectableItems: KeyValue<string, any>[];\r\n  // Can an item be added more than once?\r\n  @Input() allowDuplicates: boolean = true;\r\n  // Is control disabled?\r\n  @Input() enabled: boolean = true;\r\n  // Property name on which to base equality\r\n  @Input() equalityProperty: string = '';\r\n  \r\n  // \"selectedItems\" is updated by setting value of form control and not via input parms\r\n  selectedItems: KeyValue<string, any>[];\r\n  // \"remainingSelectableItems\" is dependent on value of \"allowDuplicates\"\r\n  remainingSelectableItems: KeyValue<string, any>[];\r\n\r\n  onChange: Function;\r\n  onTouched: Function;\r\n\r\n  //\r\n  // ControlValueAccessor methods\r\n  writeValue(value: KeyValue<string, any>[]) { \r\n    this.selectedItems = value;\r\n    this.determineRemainingSelectableItems();\r\n  }\r\n  registerOnChange(fn) { this.onChange = fn; }\r\n  registerOnTouched(fn) { this.onTouched = fn; }\r\n  //\r\n\r\n  constructor(\r\n    @Optional() @Self() public ngControl: NgControl,\r\n    private logService: LogService) {\r\n  \r\n      if (this.ngControl != null) { \r\n        this.ngControl.valueAccessor = this;\r\n      }\r\n    }\r\n\r\n  ngOnInit() {}\r\n\r\n  // Gets fired on changes to all inputs, but only need to take some action when\r\n  // selectable items get changed.\r\n  ngOnChanges(changes) {\r\n    if (changes.selectableItems) {\r\n      // If remaining items list hasn't yet been populated, do that now.\r\n      if (!this.remainingSelectableItems) {\r\n        this.remainingSelectableItems = this.selectableItems.slice(0, this.selectableItems.length);\r\n      }\r\n      this.determineRemainingSelectableItems();\r\n    }\r\n  }\r\n\r\n  // Item selected from list\r\n  onSelected(item: KeyValue<string, any>) {\r\n    this.selectedItems.push(item);\r\n    this.determineRemainingSelectableItems();\r\n    this.onChange(this.selectedItems);\r\n  }\r\n\r\n  // Item removed from displayed chips\r\n  onRemoved(item: KeyValue<string, any>) {\r\n    const index = this.selectedItems.indexOf(item);\r\n    if (index >= 0) {\r\n      this.selectedItems.splice(index, 1);\r\n    }\r\n    this.determineRemainingSelectableItems();\r\n    this.onChange(this.selectedItems);\r\n  }\r\n\r\n  // If \"Allow duplicates\" flag is \"true\", keep selectable list the same.\r\n  // If \"Allow duplicates\" flag is \"false\", remove selected items from selectable list.\r\n  determineRemainingSelectableItems(): void {\r\n    if (!this.selectedItems || !this.selectableItems) {\r\n      return;\r\n    }\r\n\r\n    if (!this.allowDuplicates) {\r\n      this.remainingSelectableItems = this.selectableItems.filter(x => {\r\n        return !this.findItemInList(x, this.selectedItems);\r\n      });\r\n    }\r\n  }\r\n\r\n  // Search for equality of items by comparing value in KeyValue pair\r\n  findItemInList(item: KeyValue<string, any>, list: KeyValue<string, any>[]): boolean {\r\n\r\n    if (!item || list.length === 0)  {\r\n      return false;\r\n    }\r\n\r\n    let itemValueType = typeof item.value;\r\n    let listValueType = typeof list[0].value;\r\n    if (itemValueType !== listValueType) {\r\n      this.logService.warn('Chip display comparing unequal types.  Ensure selectable items and selected items are of same type.');\r\n      return false;\r\n    }\r\n\r\n    if (itemValueType === 'number') {\r\n      return this.compareNumbers(item, list);\r\n    }\r\n    else if (itemValueType === 'string') {\r\n      return this.compareStrings(item, list);\r\n    }\r\n    else if (itemValueType === 'object' && this.equalityProperty &&\r\n      item.value.hasOwnProperty(this.equalityProperty)) {\r\n      return this.compareObjects(item, list);\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  compareNumbers(item: KeyValue<string, any>, list: KeyValue<string, any>[]): boolean {\r\n    let index = list.length;\r\n    while (index--) {\r\n      if (list[index].value === item.value) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  compareStrings(item: KeyValue<string, any>, list: KeyValue<string, any>[]): boolean {\r\n    let index = list.length;\r\n    while (index--) {\r\n      if (list[index].value.localeCompare(item.value) === 0) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  compareObjects(item: KeyValue<string, any>, list: KeyValue<string, any>[]): boolean {\r\n    let index = list.length;\r\n\r\n    while (index--) {\r\n      if (list[index].value[this.equalityProperty] === item.value[this.equalityProperty]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","/*\r\nThis custom component is a wrapper around the Angular Date Time Picker (ng-pick-datetime)\r\nhttps://www.npmjs.com/package/ng-pick-datetime\r\nhttps://danielykpan.github.io/date-time-picker/\r\n\r\nThis control ONLY produces UTC date/times\r\n\r\nThere is a line of code in onChanges() method to force the value to a UTC date/time.\r\nThe ng-pick-datetime control (<owl-date-time>) insists on appending the local timezone every time\r\nyou click it. So 'moment.toObject()' is utilized because it returns the parts of the\r\ndate without a timezone. This allows the creation of a new moment object without a\r\nlocal timezone. It's hacky, but it gets the job done. Maybe someday Angular Material\r\nwill create a datetime picker that can properly handle UTC. :^(\r\n\r\nmoment.toObject() = {\r\n    years: 2015\r\n    months: 6\r\n    date: 26,\r\n    hours: 1,\r\n    minutes: 53,\r\n    seconds: 14,\r\n    milliseconds: 600\r\n}\r\n\r\n*/\r\n\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { Component, ElementRef, Input, OnDestroy, HostBinding, forwardRef, Optional, Self, ViewEncapsulation } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { MatFormFieldControl } from '@angular/material';\r\nimport { Subject } from 'rxjs';\r\nimport moment from 'moment-es6';\r\nimport { DateTimeAdapter, OWL_DATE_TIME_FORMATS, OWL_DATE_TIME_LOCALE } from 'ng-pick-datetime';\r\nimport { MomentDateTimeAdapter } from 'ng-pick-datetime-moment';\r\nimport { DateFormatPipe } from '../../other/pipes';\r\n\r\nexport const MY_CUSTOM_FORMATS = {\r\n  parseInput: 'YYYY-MM-DD HH:mm:ss',\r\n  fullPickerInput: DateFormatPipe.format,\r\n  datePickerInput: 'YYYY-MM',\r\n  timePickerInput: 'hh:mm:ss',\r\n  monthYearLabel: 'MMM YYYY',\r\n  dateA11yLabel: 'MMM YYYY',\r\n  monthYearA11yLabel: 'MMM YYYY',\r\n};\r\n\r\n@Component({\r\n  selector: 'ags-lib-date-time-picker',\r\n  templateUrl: './date-time-picker.component.html',\r\n  styleUrls: ['./date-time-picker.component.scss'],\r\n  providers: [{ provide: MatFormFieldControl, useExisting: DateTimePickerComponent },\r\n  { provide: DateTimeAdapter, useClass: MomentDateTimeAdapter, deps: [OWL_DATE_TIME_LOCALE] },\r\n  { provide: OWL_DATE_TIME_FORMATS, useValue: MY_CUSTOM_FORMATS }\r\n  ],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DateTimePickerComponent implements ControlValueAccessor, MatFormFieldControl<string>, OnDestroy {\r\n  @HostBinding('class.floating') get shouldLabelFloat() { return this.focused || !this.empty; }\r\n  @HostBinding('id') id = `date-time-picker-${DateTimePickerComponent.nextId++}`;\r\n  @HostBinding('attr.aria-describedby') describedBy = '';\r\n\r\n  // Implementation of MatFormFieldControl\r\n  // tslint:disable-next-line:member-ordering\r\n  static nextId = 0;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  errorState = false;\r\n  controlType = 'date-time-picker';\r\n\r\n  private _placeholder: string;\r\n  private _required = false;\r\n  private _disabled = false;\r\n  _momentValue: moment.Moment = moment(); // usa a Moment object internally to store the date value\r\n  ///////////////////\r\n\r\n  // Implementation of ControlValueAccessor\r\n  onChange: Function;\r\n  onTouched: Function;\r\n  writeValue(inValue: string) { \r\n    console.log(`date-time-picker input string = ${inValue}`);\r\n    this.value = inValue;\r\n  }\r\n  registerOnChange(fn) { this.onChange = fn; }\r\n  registerOnTouched(fn) { this.onTouched = fn; }\r\n  setDisabledState(isDisabled: boolean): void { this.disabled = isDisabled; }\r\n  //////////////////////\r\n\r\n  // Implementation of MatFormFieldControl properties\r\n  @Input()\r\n  get placeholder(): string { return this._placeholder; }\r\n  set placeholder(value: string) {\r\n    this._placeholder = 'value';\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  @Input()\r\n  get value(): string | null {\r\n    return this._momentValue.utc().toISOString();\r\n  }\r\n  set value(newVal: string | null) {\r\n    this._momentValue = moment.utc(newVal);\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  get empty() {\r\n    return !this._momentValue;\r\n  }\r\n  /////////////////////\r\n\r\n  constructor(private fm: FocusMonitor, private elRef: ElementRef,\r\n    @Optional() @Self() public ngControl: NgControl) {\r\n\r\n    // Implementation of MatFormFieldControl interface\r\n    this.fm.monitor(elRef.nativeElement, true).subscribe(origin => {\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n    if (this.ngControl != null) { this.ngControl.valueAccessor = this; } // required for interaction with Angular forms\r\n    /////////////\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this.fm.stopMonitoring(this.elRef.nativeElement);\r\n  }\r\n\r\n  // Implementation of MatFormFieldControl methods\r\n  setDescribedByIds(ids: string[]) {\r\n    this.describedBy = ids.join(' ');\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if ((event.target as Element).tagName.toLowerCase() !== 'input') {\r\n      this.elRef.nativeElement.querySelector('input').focus();\r\n    }\r\n  }\r\n  ////////////////////\r\n\r\n  // My functions\r\n\r\n  onDataChanged(event: any) {\r\n    this._momentValue = moment.utc(this._momentValue.toObject()); // force to UTC\r\n    console.log(`date-time-picker output string = ${this.value}`);\r\n    this.onChange(this.value); // required for interaction with Angular forms\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatIconRegistry } from '@angular/material';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n/*\r\nThis service provides methods to load custom icons, and it provides methods for \r\nconverting states to icon names.\r\n\r\nTo use a custom icon in a <mat-icon> element...\r\n\r\n  <mat-icon svgIcon=\"custom-icon-name\"></mat-icon>\r\n\r\nTo create a state icon, there are 2 ways of doing it. You can use the <ags-lib-state-icon> component,\r\nOr you can use the icon service directly in a <mat-icon> element.\r\n\r\n  <ags-lib-state-icon state=\"executing\"></ags-lib-state-icon>\r\n  <mat-icon [svgIcon]=\"iconService.getIconNameFromState('executing')\" [ngClass]=\"iconService.getStateClass('executing')\"></mat-icon>\r\n\r\nThere are also UCI versions of the examples above, because UCI has it's own states and colors.\r\n\r\n  <ags-lib-uci-state-icon state=\"executing\"></ags-lib-uci-state-icon>\r\n  <mat-icon [svgIcon]=\"iconService.getIconNameFromUciState('executing')\" [ngClass]=\"iconService.getUciStateClass('executing')\"></mat-icon>\r\n*/\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IconService {\r\n\r\n  private _iconNameToSvgElementMap: Map<string, SVGElement> = new Map<string, SVGElement>();\r\n\r\n  // These are the custom icons to be loaded into the MatIconRegistry\r\n  // the first item is the icon name, and the second item is the file\r\n  // containing the SVG definition of the icon\r\n  private _iconNameToFileNameMap: Map<string, string> = new Map([\r\n    //[custom-icon-name, SVG file name]\r\n    ['circle-filled', 'assets/svg-icons/circle-filled.svg'],\r\n    ['circle-outlined', 'assets/svg-icons/circle-outlined.svg'],\r\n    ['add-event', 'assets/svg-icons/Add-Event.svg'],\r\n    ['back-to-now', 'assets/svg-icons/Back-to-Now.svg'],\r\n    ['connect-points', 'assets/svg-icons/Connect-Points.svg'],\r\n    ['delete', 'assets/svg-icons/Delete.svg'],\r\n    ['pushpin', 'assets/svg-icons/Pushpin.svg'],\r\n    ['refresh', 'assets/svg-icons/Refresh.svg'],\r\n    ['response-add', 'assets/svg-icons/Response-Add.svg'],\r\n    ['sequence', 'assets/svg-icons/Sequence.svg'],\r\n    ['setting', 'assets/svg-icons/Setting.svg'],\r\n    ['timeline', 'assets/svg-icons/Timeline.svg'],\r\n    ['status-ok', 'assets/svg-icons/Status-OK.svg'],\r\n    ['status-alert', 'assets/svg-icons/Status-ALERT.svg'],\r\n    ['status-caution', 'assets/svg-icons/Status-CAUTION.svg'],\r\n    ['status-error', 'assets/svg-icons/Status-ERROR.svg'],\r\n    ['status-off', 'assets/svg-icons/Status-OFF.svg'],\r\n    ['status-standby', 'assets/svg-icons/Status-STANDBY.svg']\r\n  ]);\r\n\r\n  // map state names to icon names\r\n  private _stateToIconNameMap: Map<string, string> = new Map([\r\n    //[state, icon name]\r\n    ['uci-unallocated', 'circle-filled'],\r\n    ['uci-allocated', 'circle-filled'],\r\n    ['uci-proposed', 'circle-filled'],\r\n    ['uci-planned', 'circle-filled'],\r\n    ['uci-executing', 'circle-outlined'],\r\n    ['uci-completed', 'circle-filled'],\r\n    ['uci-failed', 'circle-filled'],\r\n    ['uci-cancelled', 'circle-filled'],\r\n    ['uci-unknown', 'circle-outlined'],\r\n    ['off', 'circle-outlined'],\r\n    ['occurring', 'circle-filled'],\r\n    ['executing', 'circle-filled'],\r\n    ['occurred', 'circle-filled'],\r\n    ['ok', 'circle-filled'],\r\n    ['completed', 'circle-filled'],\r\n    ['caution', 'circle-filled'],\r\n    ['proposed', 'circle-filled'],\r\n    ['not_occurred', 'circle-filled'],\r\n    ['not-occurred', 'circle-filled'],\r\n    ['notoccurred', 'circle-filled'],\r\n    ['alert', 'circle-filled'],\r\n    ['failed', 'circle-filled'],\r\n    ['error', 'circle-filled'],\r\n    ['standby', 'circle-outlined'],\r\n    ['unknown', 'circle-outlined']\r\n  ]);\r\n\r\n  constructor(private iconRegistry: MatIconRegistry,\r\n    private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  /****************************************************************************\r\n   * load custom icons. Use them in HTML like this... <mat-icon svgIcon=\"add-event\"></mat-icon>\r\n   ****************************************************************************/\r\n  init() {\r\n    this._iconNameToFileNameMap.forEach((v, k) => {\r\n      this.iconRegistry.addSvgIcon(k, this.sanitizer.bypassSecurityTrustResourceUrl(v));\r\n    });\r\n\r\n    this._iconNameToFileNameMap.forEach((v, k) => {\r\n      this.iconRegistry.getNamedSvgIcon(k).subscribe(res => {\r\n        this._iconNameToSvgElementMap.set(k, res);\r\n      });\r\n    });\r\n  }\r\n\r\n  /****************************************************************************\r\n   * Get icon SVG element from icon string name\r\n   ****************************************************************************/\r\n  getIconSvgElement(iconStrName: string): SVGElement {\r\n    let svg: SVGElement;\r\n    try {\r\n      if (!iconStrName || iconStrName.length === 0 || !this._iconNameToSvgElementMap.has(iconStrName)) {\r\n        iconStrName = 'circle-outlined';\r\n      }\r\n      svg = this._iconNameToSvgElementMap.get(iconStrName);\r\n    } catch (e) {\r\n      svg = new SVGElement();\r\n    }\r\n    return svg;\r\n  }\r\n\r\n  /****************************************************************************\r\n   * \r\n   ****************************************************************************/\r\n  getIconNameFromState(state: string): string {\r\n    try {\r\n      if (!state || state.length === 0 || !this._stateToIconNameMap.has(state)) {\r\n        state = 'unknown';\r\n      }\r\n      return this._stateToIconNameMap.get(state);\r\n    } catch (e) {\r\n      return 'circle-outlined';\r\n    }\r\n  }\r\n\r\n  /****************************************************************************\r\n   * \r\n   ****************************************************************************/\r\n  getIconSvgElementFromState(state: string): SVGElement {\r\n    return this.getIconSvgElement(this.getIconNameFromState(state));\r\n  }\r\n\r\n  /****************************************************************************\r\n   * \r\n   ****************************************************************************/\r\n  getIconNameFromUciState(state: string): string {\r\n    return this.getIconNameFromState(`uci-${state}`);\r\n  }\r\n\r\n  /****************************************************************************\r\n   * \r\n   ****************************************************************************/\r\n  getIconSvgElementFromUciState(state: string): SVGElement {\r\n    return this.getIconSvgElementFromState(`uci-${state}`);\r\n  }\r\n\r\n  /****************************************************************************\r\n   * \r\n   ****************************************************************************/\r\n  getStateClass(state: string): string {\r\n    try {\r\n      if (!state || state.length === 0 || !this._stateToIconNameMap.has(state)) {\r\n        state = 'unknown';\r\n      }\r\n      return `state-${state.toLowerCase()}`;\r\n    } catch (e) {\r\n      return 'state-unknown';\r\n    }\r\n  }\r\n\r\n  /****************************************************************************\r\n   * \r\n   ****************************************************************************/\r\n  getUciStateClass(state: string): string {\r\n    try {\r\n      if (!state || state.length === 0 || !this._stateToIconNameMap.has(state)) {\r\n        state = 'unknown';\r\n      }\r\n      return `uci-state-${state.toLowerCase()}`;\r\n    } catch (e) {\r\n      return 'uci-state-unknown';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { IconService } from '../../services/icon.service';\r\n\r\n\r\n@Component({\r\n  selector: 'ags-lib-state-icon',\r\n  template: `\r\n    <mat-icon [svgIcon]=\"iconService.getIconNameFromState(state)\" [ngClass]=\"iconService.getStateClass(state)\"></mat-icon>\r\n    `,\r\n    styleUrls: ['./state-icon.component.scss']\r\n})\r\nexport class StateIconComponent implements OnInit {\r\n\r\n  @Input() state: string;\r\n  \r\n  constructor(public iconService: IconService) { }\r\n\r\n  ngOnInit() {\r\n    this.iconService.init();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'ags-lib-uci-state-icon',\r\n  template: `\r\n    <mat-icon [svgIcon]=\"iconService.getIconNameFromUciState(state)\" [ngClass]=\"iconService.getUciStateClass(state)\"></mat-icon>\r\n    `\r\n})\r\nexport class UciStateIconComponent implements OnInit {\r\n\r\n  @Input() state: string;\r\n  \r\n  constructor(public iconService: IconService) { }\r\n\r\n  ngOnInit() {\r\n    this.iconService.init();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MaterialModule } from './material.module';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n\r\nimport { DateFormatPipe, TruncatePipe, OrderByPipe, HighlightPipe, RemoveItemPipe } from './other/pipes';\r\nimport { AnnotationComponent } from './components/annotation/annotation.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { ProgressComponent } from './components/progress/progress.component';\r\nimport { TitleComponent } from './components/title/title.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { EmptyComponent } from './components/empty/empty.component';\r\nimport { EntitySelectorComponent } from './components/entity-selector/entity-selector.component';\r\nimport { ChipDisplayComponent } from './components/chip-display/chip-display.component';\r\nimport { DateTimePickerComponent } from './components/date-time-picker/date-time-picker.component';\r\nimport { StateIconComponent, UciStateIconComponent } from './components/state-icon/state-icon.component';\r\n\r\n@NgModule({\r\n  imports: [FormsModule, ReactiveFormsModule, MaterialModule, FlexLayoutModule,\r\n    CommonModule, OwlDateTimeModule, OwlNativeDateTimeModule\r\n  ],\r\n  declarations: [\r\n    AnnotationComponent,\r\n    ChipDisplayComponent,\r\n    DateFormatPipe,\r\n    DateTimePickerComponent,\r\n    EmptyComponent,\r\n    EntitySelectorComponent,\r\n    HighlightPipe,\r\n    LoginComponent,\r\n    OrderByPipe,\r\n    PageNotFoundComponent,\r\n    ProgressComponent,\r\n    RemoveItemPipe,\r\n    StateIconComponent,\r\n    TitleComponent,\r\n    TruncatePipe,\r\n    UciStateIconComponent\r\n  ],\r\n  exports: [\r\n    AnnotationComponent,\r\n    ChipDisplayComponent,\r\n    DateFormatPipe,\r\n    DateTimePickerComponent,\r\n    EmptyComponent,\r\n    EntitySelectorComponent,\r\n    HighlightPipe,\r\n    LoginComponent,\r\n    OrderByPipe,\r\n    PageNotFoundComponent,\r\n    ProgressComponent,\r\n    RemoveItemPipe,\r\n    StateIconComponent,\r\n    TitleComponent,\r\n    TruncatePipe,\r\n    UciStateIconComponent\r\n  ],\r\n  entryComponents: [\r\n  ]\r\n})\r\nexport class AgsHmiLibraryModule { }\r\n","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, retry } from 'rxjs/operators';\r\nimport { WebSocketSubject, WebSocketSubjectConfig  } from 'rxjs/webSocket';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  private serviceUrl;\r\n  private _wssConfig: WebSocketSubjectConfig<any>;\r\n  private _wss: WebSocketSubject<any>;\r\n  private get wss(): WebSocketSubject<any> {\r\n    if (!this._wss || this._wss.closed) {\r\n      console.log('AlertService: create WebSocketSubject');\r\n      this._wss = new WebSocketSubject(this._wssConfig);\r\n    } else {\r\n      console.log('AlertService: WebSocketSubject already created');\r\n    }\r\n    return this._wss;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  init(serviceUrl: string) {\r\n    if (this._wss) {\r\n      this._wss.unsubscribe();\r\n      this._wss = null;\r\n    }\r\n\r\n    this._wssConfig = {\r\n      url: serviceUrl,\r\n      closeObserver: {\r\n        next: (e: CloseEvent) => {\r\n          console.log(`%c WEBSOCKET CLOSED `, `background: black; color: #fff; font-weight: bold;`, 'Attempting to reconnect...');\r\n        }\r\n      },\r\n      openObserver: {\r\n        next: (e: Event) => {\r\n          console.log(`%c WEBSOCKET OPEN `, `background: green; color: #fff; font-weight: bold;`);\r\n        }\r\n      }\r\n    };\r\n\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  getMessages(): Observable<any> {\r\n    return this.wss.pipe(\r\n      // Adds ability to reconnect a disconnected websocket\r\n      // @see https://stackoverflow.com/a/44067972\r\n      retry(),\r\n      map(res => res) // this can be used to modify the incoming message\r\n    );\r\n  }\r\n\r\n  sendMessage(msg) {\r\n    this.wss.next(msg);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\nimport { Task } from '../models/task';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalService {\r\n\r\n  private serviceUrl: string = '';\r\n\r\n  constructor(private http: HttpClient,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * GET /cal/task/byUciTaskId/${uciTaskId}\r\n   **************************************************************************/\r\n  getTask(uciTaskId: string): Observable<Task> {\r\n    this.logService.debug('CalService.getTask');\r\n    const url = Util.urlJoin(this.serviceUrl, '/cal/task/byUciTaskId/' + uciTaskId);\r\n\r\n    return this.http.get<Task>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Task successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * PUT /cal/task/${uciTaskId}/byUciTaskId/${uciTaskId}\r\n   **************************************************************************/\r\n  addTaskToPlan(planId: string, uciTaskId: string) {\r\n    this.logService.debug('CalService.addTaskToPlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/cal/task/' + planId + '/byUciTaskId/' + uciTaskId);\r\n\r\n    return this.http.put(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    added Task successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * PUT /cal/task/reject/byUciTaskId/${uciTaskId}\r\n   **************************************************************************/\r\n  rejectTask(uciTaskId: string) {\r\n    this.logService.debug('CalService.rejectTask');\r\n    const url = Util.urlJoin(this.serviceUrl, '/cal/task/reject/byUciTaskId/' + uciTaskId);\r\n\r\n    return this.http.put(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    Task rejected successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * Send task request\r\n   * PUT cal/task/{eventId}/{planId}\r\n   **************************************************************************/\r\n  sendTaskingRequest(eventId: string, planId: string) {\r\n    this.logService.debug('CalService.sendTaskRequest');\r\n    const url = Util.urlJoin(this.serviceUrl, `/cal/task/${eventId}/${planId}`);\r\n    console.log('   ' + url);\r\n\r\n    return this.http.put(url, '', { responseType: 'text' }).pipe(\r\n      tap(res => this.logService.debug(`    task request sent`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DraftPlanService {\r\n\r\n  private serviceUrl: string = '';\r\n\r\n  constructor(private http: HttpClient,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * POST /plan/draftPlan/${planId}\r\n\r\n   **************************************************************************/\r\n  draftPlan(planId: string): Observable<string> {\r\n    this.logService.debug('PlanService.draftPlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/draftPlan/' + planId);\r\n\r\n    return this.http.post<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    added PlanAsset successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n}\r\n","import * as _ from 'lodash';\r\n\r\nexport class PlanMinTaskData {\r\n    assetEntityId: string = '';\r\n    assetName: string = '';\r\n    capability: string = '';\r\n    capabilityId: string = '';\r\n    missionTaskId: string = '';\r\n    targetEntityId: string = '';\r\n    targetName: string = '';\r\n    startTime: Date = new Date();\r\n    endTime: Date = new Date();\r\n    \r\n    //NEW SERVICE PROPERTIES\r\n    planId: string;\r\n    isPlanned: false;\r\n    missionUuid: string;\r\n    name: string;\r\n    planStatus: string;\r\n    type: string;\r\n    hmiTypeName:string;\r\n\r\n    constructor(json?: any) {\r\n        if (json) {\r\n            this.assetEntityId = _.isNil(json.assetEntityId) ? '' : json.assetEntityId;\r\n            this.assetName = _.isNil(json.assetName) ? '' : json.assetName;\r\n            this.capability = _.isNil(json.capability) ? '' : json.capability;\r\n            this.capabilityId = _.isNil(json.capabilityId) ? '' : json.capabilityId;\r\n            this.missionTaskId = _.isNil(json.missionTaskId) ? '' : json.missionTaskId;\r\n            this.targetEntityId = _.isNil(json.targetEntityId) ? '' : json.targetEntityId;\r\n            this.targetName = _.isNil(json.targetName) ? '' : json.targetName;\r\n            this.startTime = new Date(json.startTime);\r\n            this.endTime = new Date(json.endTime);\r\n            this.isPlanned = json.isPlanned;\r\n\r\n            // DELETE:\r\n            this.assetEntityId = this.assetEntityId.trim();\r\n            this.targetEntityId = this.targetEntityId.trim();\r\n\r\n            //NEW SERVICE PROPERTIES\r\n            this.planId = _.isNil(json.planId) ? '' : json.planId;\r\n            this.isPlanned = _.isNil(json.isPlanned) ? false : json.isPlanned;\r\n            this.missionUuid = _.isNil(json.missionUuid) ? '' : json.missionUuid;\r\n            this.name = _.isNil(json.name) ? '' : json.name;\r\n            this.planStatus = _.isNil(json.planStatus) ? '' : json.planStatus;\r\n            this.type = _.isNil(json.type) ? '' : json.type;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\nimport { PlanMinTaskData } from '../models/plan';\r\nimport { PlanAsset } from '../models/planAsset';\r\nimport { MissionTask } from '../models/missionTask';\r\nimport { OptimizationObjective } from '../models/optimizationObjective';\r\nimport { OptimizationMetric } from '../models/optimizationMetric';\r\nimport { AccessWindow } from '../models/accessWindow';\r\nimport { TaskConstraint } from '../models/taskConstraint';\r\nimport { DisplayWindow } from '../models/displayWindow';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanService {\r\n\r\n  private serviceUrl: string = '';\r\n\r\n  constructor(private http: HttpClient,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * GET /min/task/byPlanId/${planId}\r\n   * get PlanMinTaskData\r\n   **************************************************************************/\r\n  getMinTaskDataByPlanId(planId: string): Observable<PlanMinTaskData[]> {\r\n    // const url = `${this.serviceUrl}/plan/min/task/byPlanId/${planId}`;\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/min/task/byPlanId/', planId);\r\n    this.logService.debug(`PlanService.getMinTaskDataByPlanId()`);\r\n\r\n    return this.http.get<PlanMinTaskData[]>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived PlanMinTaskData for planId ${planId}`, res)),\r\n      map(res => res['planMinTaskData'].map(item => new PlanMinTaskData(item)))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * POST /min/task/byPlanId/${planId}\r\n   * create PlanMinTaskData\r\n   **************************************************************************/\r\n  createMinTaskDataByPlanId(planId: string, plan: PlanMinTaskData): Observable<PlanMinTaskData[]> {\r\n    // const url = `${this.serviceUrl}/plan/min/task/byPlanId/${planId}`;\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/min/task/byPlanId/', planId);\r\n    this.logService.debug(`PlanService.createMinTaskDataByPlanId()`);\r\n\r\n    return this.http.post<PlanMinTaskData[]>(url, plan, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    created PlanMinTaskData for planId ${planId}`, res)),\r\n      map(res => res['planMinTaskData'].map(item => new PlanMinTaskData(item)))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * PUT /plan/min/task/byPlanId/${planId}\r\n   * update PlanMinTaskData\r\n   **************************************************************************/\r\n  updatePlanMinTaskData(planId: string, plan: PlanMinTaskData): Observable<PlanMinTaskData[]> {\r\n    // const url = `${this.serviceUrl}/plan/min/task/byPlanId/${planId}`;\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/min/task/byPlanId/', planId);\r\n    this.logService.debug(`PlanService.updatePlanMinTaskData()`);\r\n\r\n    return this.http.put<PlanMinTaskData[]>(url, plan, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated planId ${planId}`, res)),\r\n      map(res => res['planMinTaskData'].map(item => new PlanMinTaskData(item)))\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n   * DELETE /plan/min/task/byPlanId/${planId}\r\n   * delete PlanMinTaskData\r\n   **************************************************************************/\r\n  deletePlanMinTaskData(planId: string, plan: PlanMinTaskData): Observable<any> {\r\n    // const url = `${this.serviceUrl}/plan/missionTarget/byPlanId/${planId}`;\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/missionTarget/byPlanId/', planId);\r\n    this.logService.debug(`PlanService.deletePlanMinTaskData()`);\r\n    let bodyData = { strings: [plan.missionTaskId] };\r\n\r\n    // HACK: the whole PlanMinTaskData stuff is all hacked up. Revisit this at some point\r\n    return this.http.request<any>('DELETE', url, { ...httpOptions, body: bodyData }).pipe(\r\n      tap(res => this.logService.debug(`    deleted planId ${planId}`))\r\n    );\r\n  }\r\n\r\n  loadByMissionId(id: string): Observable<PlanMinTaskData[]> {\r\n    this.logService.debug('PlanService.loadByMissionId');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/byMissionId/' + id);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n      map(res => res.plans)\r\n    );\r\n  }\r\n\r\n  planAssetsByPlanId(id: string): Observable<PlanAsset[]> {\r\n    this.logService.debug('PlanService.planAssetsByPlanId');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/planAssets/' + id);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n      map(res => res.planAssets)\r\n    );\r\n  }\r\n\r\n  missionTaskDisplay(id: string): Observable<MissionTask[]> {\r\n    this.logService.debug('PlanService.missionTaskDisplay');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/missionTaskDisplay/byPlanId/' + id);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n      map(res => res.missionTasks)\r\n    );\r\n  }\r\n\r\n  addMissionTaskToPlan(planId: string, entityIds: string[]): Observable<MissionTask[]> {\r\n    this.logService.debug('PlanService.addMissionTaskToPlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/missionTask/byPlanId/' + planId);\r\n\r\n    let param = {\r\n      'strings': entityIds\r\n    };\r\n\r\n    return this.http.post<any>(url, param, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n      map(res => res.missionTasks)\r\n    );\r\n  }\r\n\r\n  removeMissionTasksFromPlan(planId: string, strings: string[]): Observable<MissionTask[]> {\r\n    this.logService.debug('PlanService.removeMissionTasksFromPlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/missionTask/byPlanId/' + planId);\r\n\r\n    const deleteOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n      body: {\r\n        strings: strings\r\n      }\r\n    };\r\n\r\n    return this.http.delete<any>(url, deleteOptions).pipe(\r\n      tap(res => this.logService.debug(`    deleted tasks successfully`)),\r\n      map(res => res.missionTasks)\r\n    );\r\n  }\r\n\r\n  copyPlan(plan: PlanMinTaskData): Observable<string> {\r\n    this.logService.debug('PlanService.copyPlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/copy/byPlanId/' + plan.planId);\r\n\r\n    return this.http.put(url, plan, { ...httpOptions, responseType: 'text' }).pipe(\r\n      tap(res => this.logService.debug(`    added plan successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  getByPlanId(planId: string): Observable<PlanMinTaskData> {\r\n    this.logService.debug('PlanService.getByPlanId');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/byPlanId/' + planId);\r\n\r\n    return this.http.get<PlanMinTaskData>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved plan successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  updatePlanAssets(planAssets: PlanAsset[]): Observable<PlanAsset[]> {\r\n    this.logService.debug('PlanService.addPlanAsset');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/planAssets');\r\n\r\n    let param = {\r\n      'planAssets': planAssets\r\n    };\r\n\r\n    return this.http.put<any>(url, param, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    added PlanAsset successfully`)),\r\n      map(res => res.planAssets)\r\n    );\r\n  }\r\n\r\n  getOptimizationObjectives(planId: string): Observable<OptimizationObjective> {\r\n    this.logService.debug('PlanService.getOptimizationObjectives');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/optimizationObjectives/byPlanId/' + planId);\r\n\r\n    return this.http.get<OptimizationObjective>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Optimization Objectives successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  getOptimizationMetrics(planId: string): Observable<OptimizationMetric> {\r\n    this.logService.debug('PlanService.getOptimizationMetrics');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/metrics/byPlanId/' + planId);\r\n\r\n    return this.http.get<OptimizationMetric>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Optimization Metrics successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  deletePlan(planId: string): Observable<string> {\r\n    this.logService.debug('PlanService.deletePlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/byPlanId/' + planId);\r\n\r\n    const deleteOptions = {\r\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n    };\r\n\r\n    return this.http.delete<string>(url, deleteOptions).pipe(\r\n      tap(res => this.logService.debug(`    deleted plan successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  updatePlan(plan: PlanMinTaskData): Observable<PlanMinTaskData> {\r\n    this.logService.debug('PlanService.updatePlan');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan');\r\n\r\n    return this.http.put<any>(url, plan, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated Plan successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  getRequestWindows(planId: string): Observable<AccessWindow[]> {\r\n    this.logService.debug('PlanService.getRequestWindow');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/requestWindows/byPlanId/' + planId);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Request Windows successfully`)),\r\n      map(res => res.accessWindows)\r\n    );\r\n  }\r\n\r\n  getDisplayWindows(planId: string): Observable<DisplayWindow[]> {\r\n    this.logService.debug('PlanService.getDisplayWindows');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/display/requestWindows/byPlanId/' + planId);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Request Windows successfully`)),\r\n      map(res => res.displayWindows)\r\n    );\r\n  }\r\n\r\n  getTaskConstraints(planId: string): Observable<TaskConstraint[]> {\r\n    this.logService.debug('PlanService.getTaskConstraints');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/task/constraints/byPlanId/' + planId);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Task Constraint  successfully`)),\r\n      map(res => res.planMissionTaskConstaintsGroups)\r\n    );\r\n  }\r\n\r\n  updateTaskConstraints(constraints: TaskConstraint): Observable<TaskConstraint> {\r\n    this.logService.debug('PlanService.updateTaskConstraints');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/task/constraints');\r\n\r\n    return this.http.put<any>(url, constraints, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated Task Constraint  successfully`)),\r\n      map(res => res.planMissionTaskConstaintsGroups)\r\n    );\r\n  }\r\n\r\n  updateOptimizationObjectives(optimizationObjective: OptimizationObjective): Observable<OptimizationObjective> {\r\n    this.logService.debug('PlanService.updateOptimizationObjectives');\r\n    const url = Util.urlJoin(this.serviceUrl, '/plan/optimizationObjectives');\r\n\r\n    return this.http.put<any>(url, optimizationObjective, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    updated Optimization Objectives successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LogService } from './log.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProgressService {\r\n\r\n  pendingRequests: number = 0;\r\n  containerName = 'progressContainer';\r\n  element: HTMLElement = null;\r\n\r\n  constructor(\r\n    private logService: LogService) {\r\n  }\r\n\r\n  getElement() {\r\n    if (this.element == null) {\r\n      this.logService.debug('Default element for progress spinner = \"' + this.containerName + '\"');\r\n      this.element = document.getElementById(this.containerName);\r\n      \r\n      if (!this.element) {\r\n        this.logService.debug('Progress spinner element not found.  Ensure element is included in document.');\r\n      }\r\n    }\r\n\r\n    return this.element;\r\n  }\r\n\r\n  setBusy(isBusy: boolean) {\r\n    if (isBusy) {\r\n      //Keep track of how many requests there have been to show the busy message.\r\n      this.pendingRequests++;\r\n      //If force is true show the busy message immediately.\r\n      this.setVisible(true);\r\n    }\r\n    else {\r\n      //Keep track of how many requests there have been to hide the busy message.\r\n      if (this.pendingRequests > 0) {\r\n        this.pendingRequests--;\r\n      }\r\n\r\n      //If there is no more outstanding busy requests or if force is true then hide the busy message.\r\n      if (this.pendingRequests <= 0) {\r\n        this.setVisible(false);\r\n        this.pendingRequests = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  //Control the visibility of the busy message div.\r\n  setVisible(isVisible: boolean) {\r\n    try {\r\n      if (isVisible) {\r\n        this.getElement().style.display = 'flex';\r\n      }\r\n      else {\r\n        this.getElement().style.display = 'none';\r\n      }\r\n    }\r\n    catch(err) {\r\n      this.logService.warn('Unable to display spinner.  Is \"ags-lib-progress\" component included?');\r\n    }\r\n  }\r\n}\r\n","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { LogService } from './log.service';\r\nimport { Task } from '../models/task';\r\nimport { Util } from '../other/util';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n  })\r\nexport class TaskOrderService {\r\n\r\n    private serviceUrl: string = '';\r\n\r\n    constructor(private http: HttpClient, private logService: LogService) { }\r\n\r\n    init(serviceUrl: string) {\r\n        this.serviceUrl = serviceUrl;\r\n    }\r\n\r\n    createTask(task: Task): Observable<Task> {\r\n        this.logService.debug('TaskService.createTask');\r\n        const url = Util.urlJoin(this.serviceUrl, '/taskingOrder');\r\n        return this.http.post<Task>(url, task, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    retreived event model ${name}`, res))\r\n        );\r\n    }\r\n\r\n    loadAll(type: string): Observable<Task[]> {\r\n        this.logService.debug('TaskService.loadAll');\r\n        const url = Util.urlJoin(this.serviceUrl, '/taskingOrder/allOrders?type=' + type);\r\n\r\n        return this.http.get<any>(url, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n            map(res => res.taskingOrders)\r\n        );\r\n    }\r\n\r\n    loadById(id: string): Observable<Task> {\r\n        this.logService.debug('TaskService.loadById');\r\n        const url = Util.urlJoin(this.serviceUrl, '/taskingOrder/' + id);\r\n\r\n        return this.http.get<Task>(url, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n            map(res => res)\r\n        );\r\n    }\r\n\r\n    deleteTaskingOrder(id: string): Observable<string> {\r\n        this.logService.debug('TaskService.deleteTaskingOrder');\r\n        const url = Util.urlJoin(this.serviceUrl, '/taskingOrder/' + id);\r\n\r\n        const deleteOptions = {\r\n          headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n        };\r\n\r\n        return this.http.delete<string>(url, deleteOptions).pipe(\r\n          tap(res => this.logService.debug(`    deleted task order successfully`)),\r\n          map(res => res)\r\n        );\r\n      }\r\n\r\n    updateTaskingOrder(task: Task): Observable<Task> {\r\n        this.logService.debug('TaskService.updateTaskingOrder');\r\n        const url = Util.urlJoin(this.serviceUrl, '/taskingOrder');\r\n\r\n        return this.http.put<Task>(url, task, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`     updated task ${task.taskingOrderUuid}`)),\r\n            map(res => res)\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TimeService {\r\n\r\n    serviceUrl: string = '';\r\n\r\n    constructor(\r\n        private http: HttpClient) {\r\n    }\r\n\r\n    init(serviceUrl: string) {\r\n        this.serviceUrl = serviceUrl;\r\n    }\r\n\r\n    getTime(): Observable<any> {\r\n\r\n        return this.http.get(this.serviceUrl, { responseType: 'text' })\r\n          .pipe(map(\r\n            res => res\r\n          ));\r\n    \r\n      }\r\n\r\n}","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderService {\r\n\r\n  public appName: string;\r\n  public headerTitle: BehaviorSubject<string>;\r\n  public breadcrumb: BehaviorSubject<object>;\r\n  private _headerPrimaryTitle = '';\r\n  private _headerSubTitle = '';\r\n\r\n  public set headerPrimaryTitle(value) {\r\n    this._headerPrimaryTitle = value;\r\n    this.titleService.setTitle(value + ' - ' + this.appName); // this is what gets displayed in the browser tab\r\n    this.updateHeaderTitle();\r\n  }\r\n\r\n  public set headerSubTitle(value) {\r\n    this._headerSubTitle = value;\r\n    this.updateHeaderTitle();\r\n    this.updateBreadcrumb();\r\n  }\r\n\r\n  constructor(private titleService: Title) {\r\n    this.headerTitle = new BehaviorSubject<string>(titleService.getTitle());\r\n    this.breadcrumb = new BehaviorSubject<object>({});\r\n  }\r\n\r\n  init(appName: string) {\r\n    this.appName = appName;\r\n  }\r\n\r\n  // see https://kendaleiv.com/subscribing-to-browser-title-changes-using-angular/\r\n  updateHeaderTitle() {\r\n    let title = this._headerPrimaryTitle;\r\n    if (this._headerSubTitle) {\r\n      title += ' [' + this._headerSubTitle + ']';\r\n    }\r\n    this.headerTitle.next(title);\r\n  }\r\n\r\n  /*\r\n   * Updates the breadcrumb when the title is updated.\r\n   *\r\n   * @returns {object} An object consisting of the primary title, and the subtitle\r\n   */\r\n  updateBreadcrumb() {\r\n    this.breadcrumb.next({\r\n      primaryTitle: this._headerPrimaryTitle,\r\n      subtitle: this._headerSubTitle,\r\n    });\r\n  }\r\n}\r\n","/*-----------------------------------------------------------------------------\r\n*  The Boeing Company\r\n*\r\n*  Copyright (c) 2017 The Boeing Company  All rights reserved.\r\n*----------------------------------------------------------------------------*/\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { LogService } from './log.service';\r\nimport { Util } from '../other/util';\r\nimport { PlanCollection } from '../models/planCollection';\r\nimport { PlanCollectionType } from '../models/planCollectionType';\r\n\r\nconst httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PlanCollectionService {\r\n\r\n    private serviceUrl: string = '';\r\n\r\n    constructor(private http: HttpClient, private logService: LogService) { }\r\n\r\n    init(serviceUrl: string) {\r\n        this.serviceUrl = serviceUrl;\r\n    }\r\n\r\n    loadAll(): Observable<PlanCollection[]> {\r\n        this.logService.debug('PlanCollectionService.loadAll');\r\n        const url = Util.urlJoin(this.serviceUrl, '/PlanCollection');\r\n\r\n        return this.http.get<any>(url, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n            map(res => res.planCollections)\r\n        );\r\n    }\r\n\r\n    loadAllTypes(): Observable<PlanCollectionType[]> {\r\n        this.logService.debug('PlanCollectionService.loadAllTypes');\r\n        const url = Util.urlJoin(this.serviceUrl, '/PlanCollection/Type');\r\n\r\n        return this.http.get<any>(url, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    retreived plan collection types ${name}`, res)),\r\n            map(res => res.planTypes)\r\n        );\r\n    }\r\n\r\n    getAssetGroupType(missionType: string): Observable<string> {\r\n        this.logService.debug('PlanCollectionService.loadAllTypes');\r\n\r\n        return this.loadAllTypes().pipe(\r\n            tap(res => this.logService.debug(`    retreived plan collection types ${name}`, res)),\r\n            map(res => res.filter(p => p.hmiName === missionType)[0].assetGroup1)\r\n        );\r\n    }\r\n\r\n    loadById(missionId: string): Observable<PlanCollection> {\r\n        this.logService.debug('PlanCollectionService.loadById');\r\n        const url = Util.urlJoin(this.serviceUrl, '/PlanCollection/byId/' + missionId);\r\n\r\n        return this.http.get<PlanCollection>(url, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    retreived event model ${name}`, res)),\r\n            map(res => res)\r\n        );\r\n    }\r\n\r\n    create(planCollection: PlanCollection): Observable<PlanCollection> {\r\n        this.logService.debug('PlanCollectionService.createPlanCollection');\r\n        const url = Util.urlJoin(this.serviceUrl, '/PlanCollection');\r\n        return this.http.post<PlanCollection>(url, planCollection, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`    cerated Plan Collection ${name}`, res))\r\n        );\r\n    }\r\n\r\n    delete(id: string): Observable<string> {\r\n        this.logService.debug('PlanCollectionService.deletePlanCollection');\r\n        const url = Util.urlJoin(this.serviceUrl, '/PlanCollection/byId/' + id);\r\n\r\n        const deleteOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n        };\r\n\r\n        return this.http.delete<string>(url, deleteOptions).pipe(\r\n            tap(res => this.logService.debug(`    deleted Plan Collection successfully`)),\r\n            map(res => res)\r\n        );\r\n    }\r\n\r\n    update(planCollection: PlanCollection): Observable<PlanCollection> {\r\n        this.logService.debug('PlanCollectionService.updatePlanCollection');\r\n        const url = Util.urlJoin(this.serviceUrl, '/PlanCollection');\r\n\r\n        return this.http.put<PlanCollection>(url, planCollection, httpOptions).pipe(\r\n            tap(res => this.logService.debug(`     updated Plan Collection ${planCollection.missionUUId}`)),\r\n            map(res => res)\r\n        );\r\n    }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\nimport { tap, map } from 'rxjs/operators';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CzmlService {\r\n  private serviceUrl: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private logService: LogService\r\n  ) { }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  getGroundTrackAndSensorVolume(planId: string, targetId: string, missionId?: string): Observable<any> {\r\n    let endpoint = `/czml/groundTrackAndSensorVolume/${planId}/${targetId}`;\r\n\r\n    if (missionId) {\r\n      endpoint = `${endpoint}/${missionId}`;\r\n    }\r\n\r\n    const url = Util.urlJoin(this.serviceUrl, endpoint);\r\n    this.logService.debug('CzmlService.getGroundTrackAndSensorVolume()');\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug('    retrieved Czml')),\r\n      map(res => res),\r\n    );\r\n  }\r\n\r\n  /**\r\n  * Handle http operation that failed.\r\n  *\r\n  * @param operation {string} name of the operation that failed\r\n  * @param result {any} optional value to return as the observable result\r\n  */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      this.logService.error(`${operation} failed: ${error.message}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json'})\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchedulerService {\r\n\r\n  private serviceUrl: string = '';\r\n\r\n  constructor(private http: HttpClient,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n   * GET /schedule/solverTypes/${missionType}\r\n   **************************************************************************/\r\n  getSolverTypes(missionType: string): Observable<string[]> {\r\n    this.logService.debug('SchedulerService.getSolverTypes');\r\n    const url = Util.urlJoin(this.serviceUrl, '/schedule/solverTypes/' + missionType);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    retrieved Solver Types successfully`)),\r\n      map(res => res.strings)\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { Util } from '../other/util';\r\nimport { LogService } from './log.service';\r\nimport { SpsEvent } from '../models/spsEvent';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExternalScheduleService {\r\n\r\n  private serviceUrl: string = '';\r\n\r\n  constructor(private http: HttpClient,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  init(serviceUrl: string) {\r\n    this.serviceUrl = serviceUrl;\r\n  }\r\n\r\n  /**************************************************************************\r\n  * POST /runInternalScheduler/${planId}\r\n  **************************************************************************/\r\n  runInternalScheduler(planId: string): Observable<string> {\r\n    this.logService.debug('ExternalScheduleService.runInternalScheduler');\r\n    const url = Util.urlJoin(this.serviceUrl, '/runInternalScheduler/' + planId);\r\n\r\n    return this.http.post<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    RunInternal Scheduler successfull`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n  * POST /publishToLaso/${planId}\r\n  **************************************************************************/\r\n  publishToLaso(planId: string): Observable<string> {\r\n    this.logService.debug('ExternalScheduleService.publishToLaso');\r\n    const url = Util.urlJoin(this.serviceUrl, '/publishToLaso/' + planId);\r\n\r\n    return this.http.post<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    Published To Laso successfully`)),\r\n      map(res => res.status)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n  * POST /spsEvent/${planId}\r\n  **************************************************************************/\r\n  create(spsEvent: SpsEvent): Observable<string> {\r\n    this.logService.debug('ExternalScheduleService.spsEvent');\r\n    const url = Util.urlJoin(this.serviceUrl, '/spsEvent');\r\n\r\n    return this.http.post<any>(url, spsEvent, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    Stored sps Event successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n  * POST /publishToLaso/${planId}\r\n  **************************************************************************/\r\n  getLasoProhibit(prohibitId: string): Observable<SpsEvent> {\r\n    this.logService.debug('ExternalScheduleService.getLasoProhibit');\r\n    const url = Util.urlJoin(this.serviceUrl, '/getLasoProhibit/' + prohibitId);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    Retrieved Laso Prohibit successfully`)),\r\n      map(res => res)\r\n    );\r\n  }\r\n\r\n  /**************************************************************************\r\n  * POST /assetsWithMx/${planId}\r\n  **************************************************************************/\r\n  getAssetsWithMx(planId: string): Observable<string[]> {\r\n    this.logService.debug('ExternalScheduleService.assetsWithMx');\r\n    const url = Util.urlJoin(this.serviceUrl, '/assetsWithMx/' + planId);\r\n\r\n    return this.http.get<any>(url, httpOptions).pipe(\r\n      tap(res => this.logService.debug(`    Retrieved assets with Mx successfully`)),\r\n      map(res => res.strings)\r\n    );\r\n  }\r\n\r\n}\r\n","export class AccessWindowLimit {\r\n    capabilityId: string;\r\n    elevationMaxLimit: number;\r\n    earthLimbAltLimit: number;\r\n    rangeObservable: number;\r\n    qualityScore: number;\r\n    lunarExclusionAngle: number;\r\n    applyLightingConstraints: boolean;\r\n    solarExclusionAngle: number;\r\n    applySolarDarknessConstraint: boolean;\r\n    rangeTaskable: number;\r\n    rangeMax: number;\r\n    rangeMaxObservable:\tnumber;\r\n    rangeMin: number;\r\n    elevationMinLimit: number;\r\n    boresightOffAngle: number;\r\n    boresight: number;\r\n    azimuthMinLimit: number;\r\n    azimuthMaxLimit: number;\r\n}\r\n","import { PlanSubType } from './planSubType';\r\nimport { AlertType } from './alertType';\r\nimport { TaskSubType } from './taskSubType';\r\n\r\nexport class Alert {\r\n\r\n    alertType: AlertType;\r\n    description: string;\r\n    uuid: string;\r\n    planSubType: {\r\n        type: PlanSubType,\r\n    };\r\n    taskSubType: TaskSubType;\r\n    domain: string;\r\n    assetStatusSubType: {\r\n        statusType: string;\r\n        uuid: string;\r\n        type: string;\r\n        assetName: string;\r\n        assetId: string;\r\n        assetType: string;\r\n        assetState: string;\r\n        domain: string;\r\n        owner: string;\r\n        capabilityStatusList: {\r\n            capabilityStatusSummaries: {\r\n                capabilityID: string;\r\n                capabilityType: string;\r\n                capabilityStatus: string;\r\n                effectiveTime: string; \r\n            }\r\n        }\r\n        assetPosition: {\r\n            source: string;\r\n            orbitType: string;\r\n            latitude: string;\r\n            longitude: string;\r\n            altitude: string;\r\n        }\r\n        lastUpdateTime: string;\r\n    }\r\n}\r\n","export enum AlertType {\r\n    plan = 'PLAN',\r\n    timeUpdate = 'timeUpdate',\r\n    task = 'TASK',\r\n    assetStatus = 'ASSETSTATUS',\r\n    taskStatus = 'TASKSTATUS',\r\n    sps = \"SPS\",\r\n    sps_prohibit = \"SPS_PROHIBIT\",\r\n    es_prohibit = \"ES_PROHIBIT\"\r\n}","export class MissionData {\r\n    endTime: string;\r\n    name: string;\r\n    startTime: string;\r\n    commanderGuidance: string;\r\n    missionUuid: string;\r\n}\r\n","import { TaskConstraint } from './taskConstraint';\r\nimport { Group, Entity } from './entity';\r\n\r\nexport class MissionTarget {\r\n    primaryTaskId: string;\r\n    groups: Group[];\r\n    entitys: any[];\r\n\r\n    coaUuid: string;\r\n    missionPairUuid: string;\r\n    capability: string;\r\n    numberOfCollects: number;\r\n    priority: number;\r\n    taskType: string;\r\n    optTrackingId: string;\r\n    optimizer: string;\r\n    platformUuid: string;\r\n    targetCategoryId: number;\r\n    targetEntityId: string;\r\n    previousTaskUuid: string;\r\n    relativeNoEarlierThan: number;\r\n    relativeNoLaterThan: number;\r\n    primaryTask: string;\r\n\r\n    targetConstraints: TaskConstraint;\r\n    accessWindows: Window[];\r\n    requestWindows: Window[];\r\n\r\n\r\n    //implement this object when known\r\n    supportTasks: any;\r\n}\r\n","export class MissionTask {\r\n    capability: string;\r\n    earliestStartTime: string;\r\n    missionTaskId: string;\r\n    priority: string;\r\n    targetEntityId: string;\r\n    targetName: string;\r\n}\r\n","export class OptimizationMetric {\r\n    planId: string;\r\n    planDuration: number;\r\n    totalMissionTime: number;\r\n    totalTaskAttempts: number;\r\n    avgTaskTime: number;\r\n    medianTaskTime: number;\r\n    avgProbTaskSuccess: number;\r\n    minProbTaskSuccess: number;\r\n    avgProbTaskAttrib: number;\r\n    probMissionSuccess: number;\r\n    numResourcesUsed: number;\r\n    numTasksAssigned: number;\r\n    numTasksUnassigned: number;\r\n    planStartTime: string;\r\n    planEndTime: string;\r\n    optDebug: string;\r\n    username: string;\r\n}\r\n","export class OptimizationObjective {\r\n    isMinimizingNumberOfTasks: boolean;\r\n    logLevel: string;\r\n    optimizationMode: number;\r\n    optimizationTimeLimit: number;\r\n    optimizer: string;\r\n    planId: string;\r\n    probMissionSuccess: number;\r\n    weightingMissVsAveTaskTime: number;\r\n    weightingTimeVsQual: number;\r\n    planStartTime: string;\r\n    planEndTime: string;\r\n    schedulerMode: string;\r\n    maxTasksPerCycle:number;\r\n\r\n}\r\n","import { Group } from './entity';\r\nimport { MissionTarget } from './missionTarget';\r\n\r\nexport class PlanAsset {\r\n    byMissionTarget: MissionTarget[];\r\n    entitys: any[];\r\n    groups: Group[];\r\n    planId: string;\r\n    assetType: string;\r\n}\r\n","export enum PlanSubType {\r\n    update = 'UPDATE',\r\n    complete = 'DRAFT',\r\n    error = 'ERROR',\r\n    executing = 'Executing'\r\n}\r\n","import { MissionData } from './missionData';\r\n\r\nexport class Task {\r\n    taskingOrderUuid: string;\r\n    uciTaskId: string;\r\n    name: string;\r\n    type: string;\r\n    missionData: MissionData[];\r\n\r\n    taskId: string;\r\n    taskDescription: string;\r\n    taskType: string;\r\n    entityId: string;\r\n    precedence: number;\r\n    priority: number;\r\n    approvalRequired: boolean;\r\n    status: string;\r\n    planId: string;\r\n\r\n}\r\n","\r\nexport class TaskSubType {\r\n    taskType: string;\r\n    uuid: string;\r\n}\r\n","import { OptimizationMetric } from './optimizationMetric';\r\nimport { MissionTarget } from './missionTarget';\r\n\r\nexport class Optimization {\r\n\r\n    missionUuid: string;\r\n    coaId: string;\r\n    coaName: string;\r\n    coaStatus: string;\r\n    draftCoaStartTime: any;\r\n    startTime: string;\r\n    endTime: string;\r\n    collectAssesCollect: boolean;\r\n    probabilityOfSuccess: number;\r\n    optimizerMessage: string;\r\n    optimizationMetricsUuid: string;\r\n    optimizationMetrics: OptimizationMetric;\r\n    missionTargets: MissionTarget;\r\n    coaObjectives: any;\r\n\r\n}\r\n","export class TaskConstraint {\r\n    targetConstraintUuid: string;\r\n    reservedA: string;\r\n    reservedB: string;\r\n    isCollectAssessCollect: true;\r\n    probabilityAttribution: number;\r\n    probabilityCollection: number;\r\n    probabilitySuccess: number;\r\n    earliestStartTime: string;\r\n    latestEndTime: string;\r\n    deconflictionConstraints: string;\r\n    useNonDedicated: true;\r\n\r\n    capability: string;\r\n    numberOfCollects: number;\r\n    priority: number;\r\n\r\n    missionTaskIds: string[];\r\n\r\n    bandwidth: string;\r\n    qualityThreshold: number;\r\n}\r\n","import { TimeWindow } from './timeWindow';\r\n\r\nexport class AccessWindow {\r\n\r\n    assetUuid: string;\r\n    missionTaskUuid: string;\r\n    targetUuid: string;\r\n    timeWindows:TimeWindow[];\r\n\r\n}","export class TimeWindow {\r\n\r\n    windowUuid: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    windowType: string;\r\n    assetId: string;\r\n    probSuccess: number;\r\n    probAttribution: number;\r\n    preExecutionTime: number;\r\n    executionTime: number;\r\n    postExecutionTime: number;\r\n    required: true;\r\n    reasonLowerProbSuccess: string;\r\n    status: string;\r\n    revNumber: string;\r\n    numberOfCollects: number;\r\n    quality: number;\r\n}\r\n","export class PlanCollection {\r\n    missionUUId: string;\r\n    name: string;\r\n    hmiTypeName: string;\r\n    type: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    commanderGuidance: string;\r\n    primaryPlan: string;\r\n    planStatus: string;\r\n    lastUserUpdate: string;\r\n    lastUpdateTime: string;\r\n}\r\n","export class PlanCollectionType {\r\n    planTypeId: string;\r\n    hmiName: string;\r\n    coaName: string;\r\n    assetGroup1: string;\r\n    assetGroup2: string;\r\n    assetGroup2Targets: string;\r\n    schedulerType: string\r\n}\r\n","export class DisplayWindow {\r\n    planId: string;\r\n    missionTaskId: string;\r\n    windowId: string;\r\n    assetId: string;\r\n    assetName: string;\r\n    assetParentId: string;\r\n    assetParentName: string;\r\n    targetId: string;\r\n    targetName: string;\r\n    capabilityId: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    priority: number;\r\n    probabilityOfAttribution: number;\r\n    probabilityOfSuccess: number;\r\n    probabilityReason: string;\r\n    required: boolean;\r\n    status: string;\r\n    postExecutionTime: number;\r\n    executionTime: number;\r\n    preExecutionTime: number;\r\n    revolutionNumber: string;\r\n    numberOfCollects: number;\r\n    quality: number;\r\n    isPrimary: boolean;\r\n    windowType: string;\r\n    groupByName: string;\r\n    user: string\r\n}","export class SpsEvent{\r\n    planId: string;\r\n    assetName: string;\r\n    taskType: string;\r\n    startTime: string;\r\n    stopTime: string;\r\n    childAssets: any[];\r\n  }\r\n  ","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { LogService } from '../services/log.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authenticationService: AuthenticationService,\r\n    private logService: LogService) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n    if (!this.authenticationService.isLoggedIn) {\r\n      this.logService.debug('guard - not logged in!!');\r\n      this.authenticationService.redirectToLoginPage();\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","// this is just a placeholder so that this file doesn't generate a compiler error.\r\n// once some real enums have been added to this file this enum can be deleted\r\nexport enum Sample {red = 1, white = 2, blue = 3}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { LogService } from '../services/log.service';\r\n\r\n/******************************************************************************\r\n * JWT Interceptor: Insert JWT into header of all requests\r\n******************************************************************************/\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private authenticationService: AuthenticationService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (request.url.indexOf(this.authenticationService.getAuthenticationServicePrefix()) === -1) {\r\n      request = request.clone({\r\n        // setHeaders: {\r\n        //   'token': this.authenticationService.token,\r\n        //   'UserName': this.authenticationService.currentUser\r\n        // }\r\n        headers: request.headers.set('token', this.authenticationService.token)\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n\r\n/******************************************************************************\r\n * Error Interceptor: Handle HTTP errors\r\n******************************************************************************/\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(public authenticationService: AuthenticationService, private logService: LogService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let self = this;\r\n    return next.handle(request).pipe(\r\n      catchError(err => {\r\n        // NOTE: err.status is always 0. Research points to backend server not attaching CORS headers to response\r\n        // see this article https://daveceddia.com/access-control-allow-origin-cors-errors-in-angular/\r\n        // and this https://stackoverflow.com/questions/29547003/angularjs-no-access-control-allow-origin-header-is-present-on-the-requested-r\r\n        // adn this https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          this.authenticationService.logOut();\r\n        } else {\r\n          this.logService.error(`ErrorInterceptor: err.status = ${err.status}`, err);\r\n        }\r\n\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/******************************************************************************\r\n * Data Recorder Interceptor\r\n******************************************************************************/\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\r\n      if (event instanceof HttpResponse) {\r\n        console.log(`>>>>>>>>>>>> CACHE INTERCEPTOR`, event);\r\n      }\r\n      return event;\r\n    }));\r\n\r\n  }\r\n}\r\n","import { Injectable, InjectionToken } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MockBackendInterceptor implements HttpInterceptor {\r\n\r\n    constructor() { }\r\n\r\n    sleep(millisecs) {\r\n        let initiation = new Date().getTime();\r\n        while ((new Date().getTime() - initiation) < millisecs) {}\r\n    }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n\r\n            // example GET endpoint\r\n            if (request.url.endsWith('/exampleEndpoint') && request.method === 'GET') {\r\n                console.log(`MOCK ${request.url}`);\r\n                this.sleep(500);\r\n                let dataObj = [ { id: '1234', data: 'data goes here' }, { id: '5678', data: 'data goes here' } ];\r\n                if (dataObj) {\r\n                    return of(new HttpResponse({ status: 200, body: JSON.stringify(dataObj) }));\r\n                } else {\r\n                    return throwError({ error: { message: 'Error' } });\r\n                }\r\n            }\r\n\r\n            // example GET endpoint with id\r\n            if (request.url.match(/\\/exampleEndpoint\\/\\d+$/) && request.method === 'GET') {\r\n                console.log(`MOCK ${request.url}`);\r\n                this.sleep(500);\r\n                let urlParts = request.url.split('/');\r\n                let id = parseInt(urlParts[urlParts.length - 1]);\r\n                let dataObj = { id: id, data: 'data goes here' };\r\n                if (dataObj) {\r\n                    return of(new HttpResponse({ status: 200, body: JSON.stringify(dataObj) }));\r\n                } else {\r\n                    return throwError({ error: { message: 'Error' } });\r\n                }\r\n            }\r\n\r\n            // example POST endpoint\r\n            if (request.url.endsWith('/exampleEndpoint') && request.method === 'POST') {\r\n                let reqBody = request.body;\r\n                console.log(`MOCK ${request.url}`, reqBody);\r\n                this.sleep(500);\r\n                if (reqBody) {\r\n                    return of(new HttpResponse({ status: 200, body: JSON.stringify(reqBody) }));\r\n                } else {\r\n                    return throwError({ error: { message: 'Error' } });\r\n                }\r\n            }\r\n\r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n\r\n        }));\r\n    }\r\n}\r\n\r\nexport let MockBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: MockBackendInterceptor,\r\n    multi: true\r\n};\r\n","import { FormGroup, AbstractControl, ValidatorFn, Validators, NG_VALIDATORS } from '@angular/forms';\r\nimport moment from 'moment-es6';\r\nimport * as _ from 'lodash';\r\n\r\n// you can get more validators from here https://github.com/yuyang041060120/ng2-validation\r\n\r\n\r\n// this validator must be applied to a FormGroup because it is comparing 2 controls\r\nfunction dateRangeValidator(startDateControlString: string, endDateControlString: string): ValidatorFn {\r\n    return (group: FormGroup): { [key: string]: boolean } | null => {\r\n        let startDateControl = group.controls[startDateControlString];\r\n        let endDateControl = group.controls[endDateControlString];\r\n        // tslint:disable-next-line:max-line-length\r\n        // console.log(`>>>>>>>>>>>>>>>>>>>>>>>>>>> DateRangeValidator(${startDateControlString}, ${endDateControlString}): from.value = ${startDateControl.value}, to.value = ${endDateControl.value}`);\r\n        if (moment(startDateControl.value).isAfter(endDateControl.value)) {\r\n            return { 'dateRange': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction dateLessThanValidator(compareControlString: string): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n        if (!control.parent) { return; }\r\n        let compareDateControl = control.parent.controls[compareControlString];\r\n        // console.log(`>>>>>>>>>>>>>>>>>>>>>>>>>>> DateLessThanValidator(${compareControlString}): from.value = ${thisDateControl.value}, to.value = ${compareDateControl.value}`);\r\n        if (moment(control.value).isAfter(compareDateControl.value)) {\r\n            return { 'dateLessThan': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction dateGreaterThanValidator(compareControlString: string): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n        if (!control.parent) { return; }\r\n        let compareDateControl = control.parent.controls[compareControlString];\r\n        // console.log(`>>>>>>>>>>>>>>>>>>>>>>>>>>> DateGreaterThanValidator(${compareControlString}): from.value = ${thisDateControl.value}, to.value = ${compareDateControl.value}`);\r\n        if (moment(control.value).isBefore(compareDateControl.value)) {\r\n            return { 'dateGreaterThan': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction maxNumLinesValidator(maxLines: number): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } | null => {\r\n        if (_.isNil(maxLines) || !_.isNil(Validators.required(control))) {\r\n            return null;\r\n        }\r\n        \r\n        let numLines = (control.value as string).split('\\n').length;\r\n        if (numLines > maxLines) {\r\n            return { 'maxNumLines': true };\r\n        }\r\n        return null;\r\n    };\r\n}\r\n\r\nfunction lt(ltParam: number): ValidatorFn {\r\n    return (control: AbstractControl): { [key: string]: boolean } => {\r\n        if (_.isNil(ltParam) || !_.isNil(Validators.required(control))) {\r\n            return null;\r\n        }\r\n\r\n        let v: number = +control.value;\r\n        return v < +ltParam ? null : { lt: true };\r\n    };\r\n}\r\n\r\nexport const CustomValidators = {\r\n    dateRangeValidator,\r\n    dateLessThanValidator,\r\n    dateGreaterThanValidator,\r\n    maxNumLinesValidator,\r\n    lt\r\n};\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["tslib_1.__decorate","observableThrowError","httpOptions","_.isNil"],"mappings":"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"}
