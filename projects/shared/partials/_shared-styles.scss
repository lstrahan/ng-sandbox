/*******************************
 scroll bars
********************************/

::-webkit-scrollbar {
    height: 12px;
    width: 10px;
}

::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.5);
    box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.5);
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
}

::-webkit-scrollbar-thumb {
    -webkit-box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
    box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.5);
    background-color: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
}

::-webkit-resizer {
    background-color: transparent;
}

/*******************************
 security classifications
********************************/
.classificationBanner {
    font-weight: bold;
    text-transform: uppercase;
    text-align: center;
    vertical-align: middle;
    height: 18px;
    line-height: 18px;
    opacity: 1;
    width: 100%;
}

.unclassified {
    color: #263238;
    background: $unclassified;
}

.confidential {
    color: #FFFFFF;
    background: $confidential;
}

.secret {
    color: #FFFFFF;
    background: $secret;
}

.topsecret, .top-secret, .top_secret {
    color: #263238;
    background: $topsecret;
}

// state
// 'fill' and 'color' attributes are both supplied
// 'fill' is used when applying class to an SVG element
// 'color' is used when applying class to a <mat-icon> or other HTML element
.state-unknown {
    fill: $state-unknown;
    color: $state-unknown;
}
.state-off {
    fill: $state-off;
    color: $state-off;
}
.state-occurring {
    fill: $state-occurring;
    color: $state-occurring;
}
.state-executing {
    fill: $state-executing;
    color: $state-executing;
}
.state-occurred {
    fill: $state-occurred;
    color: $state-occurred;
}
.state-ok {
    fill: $state-ok;
    color: $state-ok;
}
.state-completed, .state-complete {
    fill: $state-completed;
    color: $state-completed;
}
.state-caution {
    fill: $state-caution;
    color: $state-caution;
}
.state-proposed {
    fill: $state-proposed;
    color: $state-proposed;
}
.state-not-occurred, .state-notoccurred, .state-not_occurred {
    fill: $state-not-occurred;
    color: $state-not-occurred;
}
.state-alert {
    fill: $state-alert;
    color: $state-alert;
}
.state-failed {
    fill: $state-failed;
    color: $state-failed;
}
.state-error {
    fill: $state-error;
    color: $state-error;
}
.state-standby {
    fill: $state-standby;
    color: $state-standby;
}

// UCI state
.uci-state-unknown {
    fill: $grey;
    color: $grey;
}
.uci-state-unallocated {
    fill: $uci-state-unallocated;
    color: $uci-state-unallocated;
}
.uci-state-allocated {
    fill: $uci-state-allocated;
    color: $uci-state-allocated;
}
.uci-state-proposed {
    fill: $uci-state-proposed;
    color: $uci-state-proposed;
}
.uci-state-planned {
    fill: $uci-state-planned;
    color: $uci-state-planned;
}
.uci-state-executing {
    fill: $grey; // $uci-state-executing; // using $grey instead since background is white;
    color: $grey;
}
.uci-state-completed {
    fill: $uci-state-completed;
    color: $uci-state-completed;
}
.uci-state-failed {
    fill: $uci-state-failed;
    color: $uci-state-failed;
}
.uci-state-cancelled {
    fill: $uci-state-cancelled;
    color: $uci-state-cancelled;
}


/* roboto-300 - latin */
@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 300;
    src: local('Roboto Light'), local('Roboto-Light'),
        url(/assets/fonts/roboto-v18-latin-300.woff) format('woff), /* Modern Browsers */
        url(/assets/fonts/roboto-v18-latin-300.woff2) format('woff2); /* Super Modern Browsers */
  }
  /* roboto-regular - latin */
  @font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 400;
    src:  local('Roboto'), local('Roboto-Regular'),
        url(/assets/fonts/roboto-v18-latin-regular.woff) format('woff), /* Modern Browsers */
        url(/assets/fonts/roboto-v18-latin-regular.woff2) format('woff2); /* Super Modern Browsers */
  }
  /* roboto-500 - latin */
  @font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 500;
    src: local('Roboto Medium'), local('Roboto-Medium'),
        url(/assets/fonts/roboto-v18-latin-500.woff) format('woff),
        url(/assets/fonts/roboto-v18-latin-500.woff2) format('woff2);
  }
  /* roboto-700 - latin */
  @font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 700;
    src: url(/assets/fonts/roboto-v18-latin-700.woff) format('woff), /* Modern Browsers */
        url(/assets/fonts/roboto-v18-latin-700.woff2) format('woff2); /* Super Modern Browsers */
  }